SUB_CLEAR_MANY_UNK: ; 17:0000, 0x02E000
    LDA #$00
    STA CONTROL_ACCUMULATED?[2] ; Clear CTRL's.
    STA CONTROL_ACCUMULATED?+1
    STA R_**:$0052 ; Clear tons more.
    STA R_**:$0059
    STA TRIO_FILE_OFFSET_UNK[3]
    STA TRIO_FILE_OFFSET_UNK+1
    STA TRIO_FILE_OFFSET_UNK+2
    STA R_**:$004C
    STA R_**:$004D
    TAX ; X = 0
INDEX_NONZERO: ; 17:0015, 0x02E015
    STA STREAM_INDEXES_ARR_UNK[24],X ; Clear arr.
    INX ; Index++
    BNE INDEX_NONZERO ; != 0, goto.
    LDX #$1F ; Seed index.
VAL_POSITIVE: ; 17:001D, 0x02E01D
    STA CHARACTER_NAMES_ARR[8],X ; Clear.
    DEX ; Index--
    BPL VAL_POSITIVE ; Positive, goto.
    LDA #$00
    STA SCRIPT_INDEX_53_UNK ; Clear ??
    LDX #$00 ; Reset index.
VAL_NE_0x4: ; 17:0029, 0x02E029
    TXA ; X index to A.
    PHA ; Save index to stack.
    LDA CURRENT_SAVE_MANIPULATION_PAGE+8,X ; Load.
    BEQ VAL_EQ_0x00 ; == 0, goto.
    JSR SUB _TODO_PTR_AND_ARRS_IDFK ; Do ??
    CLC ; Prep add.
    LDA SCRIPT_INDEX_53_UNK ; Load val.
    ADC #$20 ; += 0x20
    STA SCRIPT_INDEX_53_UNK ; Store back.
VAL_EQ_0x00: ; 17:003A, 0x02E03A
    PLA ; Pull stack.
    TAX ; To X.
    INX ; ++
    CPX #$04 ; If _ #$04
    BNE VAL_NE_0x4 ; != 0, goto.
    JSR LIB_VAL_TO_DECIMAL_AND_FILE? ; Do.
    LDA #$80
    STA SCRIPT_INDEX_53_UNK ; Set ?
    LDY #$00 ; Stream index.
STREAM_NE_0x8: ; 17:004A, 0x02E04A
    LDA [FPTR_5C_UNK[2]],Y ; Move from file.
    STA BCD/MODULO/DIGITS_USE_A
    INY ; Stream++
    LDA [FPTR_5C_UNK[2]],Y
    STA BCD/MODULO/DIGITS_USE_B
    INY ; Stream++
    TYA ; Stream to A.
    PHA ; Save it.
    LDA BCD/MODULO/DIGITS_USE_A ; Load moved.
    CMP #$FF ; If _ #$FF
    BEQ VAL_EQ_0xFF ; ==, goto.
    JSR SUB_UNK_PTRS_ARR_UNK ; Do ??
VAL_EQ_0xFF: ; 17:005F, 0x02E05F
    CLC ; Prep add.
    LDA SCRIPT_INDEX_53_UNK ; Load.
    ADC #$20 ; += 0x20
    STA SCRIPT_INDEX_53_UNK ; Store result.
    PLA ; Pull A.
    TAY ; Back to stream.
    CPY #$08 ; If _ #$08
    BNE STREAM_NE_0x8 ; !=, goto.
    LDA [FPTR_5C_UNK[2]],Y ; Load from stream.
    AND #$E0 ; Keep 1110.0000
    LDX #$05 ; Shift count.
SHIFT_LOOP: ; 17:0072, 0x02E072
    LSR A ; >> 1, /2.
    DEX ; X--
    BNE SHIFT_LOOP ; != 0, loop shift.
    STA 56_THING_NAME_SIZE ; Store to. Not name size here.
    LDA [FPTR_5C_UNK[2]],Y ; Load from file.
    AND #$1F ; Keep 0001.1111
    STA FLAG_SPRITE_OFF_SCREEN_UNK ; Store to.
    INY ; Stream++
    LDA [FPTR_5C_UNK[2]],Y ; Load from file.
    AND #$0F ; Keep lower.
    STA BCD/MODULO/DIGITS_USE_A ; Store to.
    LDA #$00 ; Seed clear.
    LDX #$05 ; Shift count.
COUNT_NONZERO: ; 17:0089, 0x02E089
    ASL BCD/MODULO/DIGITS_USE_A ; << 1, *2.
    ROL A ; Into A.
    DEX ; Count--
    BNE COUNT_NONZERO ; != 0, loop more shifts.
    STA BCD/MODULO/DIGITS_USE_B ; Store result.
    CLC ; Prep add.
    LDA #$81 ; Load base. TODO: Base/range.
    ADC BCD/MODULO/DIGITS_USE_A ; Add with.
    STA BCD/MODULO/DIGITS_USE_A ; Store result.
    LDA #$8E ; Load base.
    ADC BCD/MODULO/DIGITS_USE_B ; Add with val.
    STA BCD/MODULO/DIGITS_USE_B ; Store result.
    JSR ENGINE_SET_MAPPER_R6_TO_0x00 ; Do.
    JSR ENGINE_SET_PALETTE_AND_QUEUE_UPLOAD ; Do.
    JSR ENGINE_SET_MAPPER_R6_TO_0x16 ; Set R6 to 0x16.
    LDX #$23
    LDY #$C0 ; PPU PTR, attributes.
    JSR PPU_PACKET_SET_VAL_0xFF_COUNT_0x40_PPU_ADDR_XY ; Clear attrs.
    LDX #$2B
    LDY #$C0
    JSR PPU_PACKET_SET_VAL_0xFF_COUNT_0x40_PPU_ADDR_XY ; For both.
    JSR 1F:15E5 ; Do ??
    LDA #$00
    STA SCRIPT_UNK_BATTLE?_OBJECT_ID_FOCUSED? ; Clear ??
    LDA #$80
    STA SCRIPT_INDEX_53_UNK ; Set ??
LOOP_CC: ; 17:00C0, 0x02E0C0
    LDX SCRIPT_INDEX_53_UNK ; Index from.
    LDA STREAM_INDEXES_ARR_UNK[24],X ; Load from arr.
    BEQ INDEX_EQ_0x00 ; == 0, goto.
    JSR SUB_IDFK ; Nonzero, do.
INDEX_EQ_0x00: ; 17:00CA, 0x02E0CA
    INC SCRIPT_UNK_BATTLE?_OBJECT_ID_FOCUSED? ; ++ ??
    CLC ; Prep add.
    LDA SCRIPT_INDEX_53_UNK ; Load ??
    ADC #$20 ; += 0x20
    STA SCRIPT_INDEX_53_UNK ; Store back.
    BCC LOOP_CC ; No overflow, goto.
    LDY #$00 ; Clear index.
    LDX #$00 ; Clear count.
X_NE_0x8: ; 17:00D9, 0x02E0D9
    LDA CHARACTER_NAMES_ARR[8],Y ; Load from Y.
    INY ; ++
    ORA CHARACTER_NAMES_ARR[8],Y ; Combine with other.
    STA BCD/MODULO/DIGITS_USE_A ; Store to.
    INY ; ++
    LDA CHARACTER_NAMES_ARR[8],Y ; Load from Y.
    INY ; ++
    ORA CHARACTER_NAMES_ARR[8],Y ; Combine with other.
    ASL A ; << 2, *4.
    ASL A
    ORA BCD/MODULO/DIGITS_USE_A ; Combine with other.
    STA BCD/MODULO/DIGITS_USE_A ; Store to.
    ASL A ; << 4, *16.
    ASL A
    ASL A
    ASL A
    ORA BCD/MODULO/DIGITS_USE_A ; Combine with.
    STA CHARACTER_NAMES_ARR[8],X ; Store to X.
    INY ; Y++
    INX ; X++
    CPX #$08 ; If _ #$08
    BNE X_NE_0x8 ; != 0, loop.
    JSR ENGINE_SETTLE_ALL_UPDATES? ; Settle engine.
    LDA #$05
    STA NMI_PPU_CMD_PACKETS_BUF[69] ; Make packet, +1 unique.
    LDA #$10
    STA NMI_PPU_CMD_PACKETS_BUF+1 ; Set count, 0x1 groups of 0x8
    LDY #$00 ; Array index.
    LDX #$04 ; Update buf index.
ARR_LT_0x8: ; 17:0110, 0x02E110
    LDA CHARACTER_NAMES_ARR[8],Y ; Move from array.
    STA NMI_PPU_CMD_PACKETS_BUF[69],X ; To update buf.
    STA NMI_PPU_CMD_PACKETS_BUF+8,X ; Making 2 packets.
    INY ; Indexes++
    INX
    CPY #$08 ; If _ #$08
    BNE ARR_LT_0x8 ; !=, goto.
    LDA #$00
    STA NMI_PPU_CMD_PACKETS_BUF+8,X ; EOF for packet A.
    LDA #$80
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO ; Set flag to do.
    LDA #$23
    STA NMI_PPU_CMD_PACKETS_BUF+2 ; Set addr, $23D8, attrs.
    LDA #$D8
    STA NMI_PPU_CMD_PACKETS_BUF+3
    LDA #$00
    STA NMI_PPU_CMD_PACKETS_INDEX ; Clear TODO better.
    LDA #$00
    STA STREAM_REPLACE_COUNT? ; Clear TODO better.
    STA SCRIPT_ENCOUNTER_ID?(SAID_SONG_ID???) ; Clear flag ??
    LDX #$80 ; Seed ??
INDEX_NONZERO_LOOP: ; 17:013E, 0x02E13E
    TXA ; X to A.
    PHA ; Save seeded.
    LDY #$04 ; Index ??
COUNT_NONZERO: ; 17:0142, 0x02E142
    LDA STREAM_INDEXES_ARR_UNK+4,X ; Load ??
    AND #$03 ; Keep lower.
    STA STREAM_INDEXES_ARR_UNK+4,X ; Store back.
    INX ; Index += 2
    INX
    DEY ; Count--
    BNE COUNT_NONZERO ; != 0, loop.
    PLA ; Pull pushed.
    CLC ; Pprep add.
    ADC #$20 ; Add val.
    TAX ; To X.
    BNE INDEX_NONZERO_LOOP ; != 0, goto.
    LDX #$00 ; Seed val stored. ??
    LDA 56_THING_NAME_SIZE ; Load ??
    CMP #$01 ; If _ #$01
    BNE A_NE_0x1 ; !=, goto.
    LDX #$04 ; Val stored.
    LDA #$FF
    STA **:$0683 ; Set ??
    STA **:$0684
    LDA #$00
    STA STREAM_PTRS_ARR_UNK+8 ; Clear ??
    STA STREAM_PTRS_ARR_UNK+40
    STA **:$0660 ; Clear ??
A_NE_0x1: ; 17:0173, 0x02E173
    STX SCRIPT_UNK_BATTLE?_OBJECT_ID_FOCUSED? ; X to.
    LDA FLAG_UNK_23 ; Load ??
    BEQ VAL_EQ_0x00 ; == 0, goto.
    LDY #$00 ; Index reset.
    STY 56_THING_NAME_SIZE ; Clear ??
NO_OVERFLOW_LOOP: ; 17:017D, 0x02E17D
    LDA STREAM_PTRS_ARR_UNK+6,Y ; Load.
    ORA #$04 ; Set.
    STA STREAM_PTRS_ARR_UNK+6,Y ; Store back.
    TYA ; To A.
    CLC ; Prep add.
    ADC #$20 ; Add ??
    TAY ; To Y index.
    BPL NO_OVERFLOW_LOOP ; Positive, goto.
VAL_EQ_0x00: ; 17:018C, 0x02E18C
    LDA 56_THING_NAME_SIZE ; Load ??
    CMP #$05 ; If _ #$05
    BNE VAL_NONZERO ; != 0, goto.
    LDA #$96
    STA 57_INDEX_UNK ; Set ??
    LDA STREAM_INDEXES_ARR_UNK+12 ; Move ??
    STA **:$068C
VAL_NONZERO: ; 17:019C, 0x02E19C
    LDX #$14
    JSR ENGINE_WAIT_X_SETTLES ; Wait.
    JSR LIB_SETUP_RAM_JMP_ABS ; Setup.
ENTRY_UNK: ; 17:01A4, 0x02E1A4
    LDA #$00 ; Seed ??
    JSR LIB_SUB_TODO ; Do a lot with state and updates/restore, special.
    JSR SUB_TODO
    BCS RET_CS ; CS, goto.
    LDX #$14
    JSR ENGINE_WAIT_X_SETTLES ; Settle.
    LDA #$07 ; Seed ??
    JSR LIB_SUB_TODO ; Lib ??
    LDA #$00
    STA R_**:$0052 ; Clear ??
    JSR 1F:0CFF
    JSR CLEAR_FLAG_OFFSCREEN ; Clear.
    JSR SUB_UNK ; Do sub ??
    JSR SET_FLAG_OFFSCREEN ; Flag.
    LDA #$03 ; Seed ??
    JSR LIB_SUB_TODO ; Lib ??
    JSR SEED_0xFC_ENTRY_UNK ; Do ??
    JMP ENTRY_UNK ; Goto.
RET_CS: ; 17:01D3, 0x02E1D3
    JSR RAM_JMP_DISABLE ; Disable.
    LDA #$00
    STA CONTROL_ACCUMULATED?[2] ; Clear controller.
    STA CONTROL_ACCUMULATED?+1
    RTS ; Leave.
SUB _TODO_PTR_AND_ARRS_IDFK: ; 17:01DD, 0x02E1DD
    STA BCD/MODULO/DIGITS_USE_C ; Store val.
    TAX ; To X.
    LDA #$00 ; Seed ptr 0x7400
    STA BCD/MODULO/DIGITS_USE_A
    LDA #$74
    STA BCD/MODULO/DIGITS_USE_B
VAL_NONZERO: ; 17:01E8, 0x02E1E8
    CLC ; Prep add.
    LDA BCD/MODULO/DIGITS_USE_A ; Load ??
    ADC #$40 ; Add with.
    STA BCD/MODULO/DIGITS_USE_A ; Store to.
    LDA BCD/MODULO/DIGITS_USE_B ; Load ??
    ADC #$00 ; Carry add.
    STA BCD/MODULO/DIGITS_USE_B ; Store to.
    DEX ; Index--
    BNE VAL_NONZERO ; != 0, goto.
    LDY #$01 ; Seed file index ??
    LDX SCRIPT_INDEX_53_UNK ; Load index.
VAL_NE_0x10: ; 17:01FC, 0x02E1FC
    LDA [BCD/MODULO/DIGITS_USE_A],Y ; Load from file, save page.
    STA STREAM_INDEXES_ARR_UNK+1,X ; Store to ??
    INY ; Stream++
    INX ; Index++
    CPY #$10 ; If _ #$10
    BNE VAL_NE_0x10 ; !=, goto.
    LDY #$14 ; Stream index.
    LDX SCRIPT_INDEX_53_UNK ; Load index ??
VAL_NE_0x18: ; 17:020B, 0x02E20B
    LDA [BCD/MODULO/DIGITS_USE_A],Y ; Load from file.
    STA STREAM_INDEXES_ARR_UNK+3,X ; Store to ??
    INX ; Index++
    INY ; Stream++
    CPY #$18 ; If _ #$18
    BNE VAL_NE_0x18 ; !=, goto.
    LDX SCRIPT_INDEX_53_UNK ; Load index.
    LDA #$FF ; Move ??
    STA STREAM_INDEXES_ARR_UNK[24],X
    LDA BCD/MODULO/DIGITS_USE_C ; Move ??
    STA STREAM_INDEXES_ARR_UNK+17,X
    LDA BCD/MODULO/DIGITS_USE_A ; Move ??
    STA STREAM_PTRS_ARR_UNK[48],X
    LDA BCD/MODULO/DIGITS_USE_B ; Move ??
    STA STREAM_PTRS_ARR_UNK+1,X
    RTS ; Leave.
SUB_UNK_PTRS_ARR_UNK: ; 17:022D, 0x02E22D
    LDX SCRIPT_INDEX_53_UNK ; X from.
    LDA BCD/MODULO/DIGITS_USE_B ; Load ??
    ASL A ; << 2, *4.
    ASL A
    STA STREAM_PTRS_ARR_UNK+2,X ; A to.
    LDA BCD/MODULO/DIGITS_USE_A ; Move from 0x60 to 0x62
    STA BCD/MODULO/DIGITS_USE_C
    LDA #$00 ; Init.
    LDX #$05 ; Shifts to do.
X_NONZERO: ; 17:023E, 0x02E23E
    ASL BCD/MODULO/DIGITS_USE_C ; << 1 var.
    ROL A ; Into A.
    DEX ; X--
    BNE X_NONZERO ; != 0, goto.
    STA BCD/MODULO/DIGITS_USE_D ; Store to.
    CLC ; Prep add.
    LDA #$00
    ADC BCD/MODULO/DIGITS_USE_C ; += val.
    STA BCD/MODULO/DIGITS_USE_C ; Store result, same.
    LDA #$80 ; Val adding.
    ADC BCD/MODULO/DIGITS_USE_D ; += val.
    STA BCD/MODULO/DIGITS_USE_D ; Store result.
    LDY #$01 ; Stream set.
    LDX SCRIPT_INDEX_53_UNK ; Load index.
STREAM_NE_0x18: ; 17:0257, 0x02E257
    LDA [BCD/MODULO/DIGITS_USE_C],Y ; Load from file 62
    STA STREAM_INDEXES_ARR_UNK+1,X ; Store to arr.
    INY ; Stream++
    INX ; Index++
    CPY #$18 ; If _ #$18
    BNE STREAM_NE_0x18 ; !=, goto.
    LDX SCRIPT_INDEX_53_UNK ; X from.
    LDY SCRIPT_ENCOUNTER_ID?(SAID_SONG_ID???) ; Y from.
    INY ; Y++
    TYA ; To A.
    STA STREAM_INDEXES_ARR_UNK[24],X ; Store to X index.
    LDA BCD/MODULO/DIGITS_USE_C ; Move to arr.
    STA STREAM_PTRS_ARR_UNK[48],X
    LDA BCD/MODULO/DIGITS_USE_D ; Move both.
    STA STREAM_PTRS_ARR_UNK+1,X
    LDY #$5E ; Val ??
    LDA BCD/MODULO/DIGITS_USE_B ; Load ??
    BPL VAL_POSITIVE ; Positive, goto.
    LDA STREAM_PTRS_ARR_UNK+6,X ; Load ??
    ORA #$01 ; Set bit.
    STA STREAM_PTRS_ARR_UNK+6,X ; Store to.
    LDY #$00 ; Stream reset.
VAL_POSITIVE: ; 17:0285, 0x02E285
    TYA ; Val to A.
    STA STREAM_PTRS_ARR_UNK+5,X ; Store val.
    RTS ; Leave.
SUB_IDFK: ; 17:028A, 0x02E28A
    LDA STREAM_PTRS_ARR_UNK+6,X ; Load ??
    AND #$01 ; Keep lower.
    BEQ LOWER_CLEAR ; Clear, goto.
    LDA #$00
    STA STREAM_INDEXES_ARR_UNK[24],X ; Clear ??
LOWER_CLEAR: ; 17:0296, 0x02E296
    LDA STREAM_PTRS_ARR_UNK+2,X ; Load ??
    ORA SCRIPT_UNK_BATTLE?_OBJECT_ID_FOCUSED? ; Or with.
    STA STREAM_PTRS_ARR_UNK+2,X ; Store back.
    LDA STREAM_INDEXES_ARR_UNK+4,X ; Load ??
    AND #$F0 ; Nibble upper only.
    LSR A ; >> 3, /8. Word index based on upper.
    LSR A
    LSR A
    TAY ; To Y index.
    LDA $960A,Y ; TODO banked in? Move fptr.
    STA BCD/MODULO/DIGITS_USE_A
    LDA $960B,Y
    STA BCD/MODULO/DIGITS_USE_B
    LDA STREAM_INDEXES_ARR_UNK+8,X ; Load ??
    AND #$E0 ; Keep 1110.0000
    LSR A ; >> 5, 32. Byte index.
    LSR A
    LSR A
    LSR A
    LSR A
    STA ALT_STUFF_COUNT? ; Store to.
    LDY #$00 ; Stream reset.
    LDA [BCD/MODULO/DIGITS_USE_A],Y ; Load from file.
    STA BCD/MODULO/DIGITS_USE_C ; Store to.
    INY ; Stream++
    LDA [BCD/MODULO/DIGITS_USE_A],Y ; Load from file.
    STA BCD/MODULO/DIGITS_USE_D ; Store to.
    INY ; Stream++
    SEC ; Prep sub.
    LDA [BCD/MODULO/DIGITS_USE_A],Y ; Load from file.
    SBC ALT_STUFF_COUNT? ; Sub with.
    TAY ; Count to Y.
    INY ; Add'l.
    LDA #$E0 ; Load ??
COUNT_NONZERO: ; 17:02D2, 0x02E2D2
    CLC ; Prep add.
    ADC #$20 ; Add with.
    DEY ; Count--
    BNE COUNT_NONZERO ; != 0, goto.
    STA SAVE_GAME_MOD_PAGE_PTR[2] ; Store as page mod ptr.
    LDA FLAG_SPRITE_OFF_SCREEN_UNK ; Load val.
    ASL A ; << 2, *4.
    ASL A
    ADC SCRIPT_UNK_BATTLE?_OBJECT_ID_FOCUSED? ; Add with ??
    TAY ; To Y index.
    LDA $8F40,Y ; Load ?? todo banked in?? val??
    STA SAVE_GAME_MOD_PAGE_PTR+1 ; Store as PTR H.
    LDA STREAM_INDEXES_ARR_UNK+4,X ; Load ??
    AND #$0C ; Add with.
    LSR A ; >> 2, /4.
    LSR A
    LDY SAVE_GAME_MOD_PAGE_PTR+1 ; Stream index from.
    LDX #$00 ; Seed count.
INDEX_NOT_TO_TARGET: ; 17:02F1, 0x02E2F1
    STA CHARACTER_NAMES_ARR[8],Y ; Store to.
    INY ; Index++
    INX ; Count++
    CPX BCD/MODULO/DIGITS_USE_D ; If _ target
    BNE INDEX_NOT_TO_TARGET ; !=, goto.
    CLC ; Prep add.
    LDA SAVE_GAME_MOD_PAGE_PTR+1 ; Load TODO check what is here.
    ADC SAVE_GAME_MOD_PAGE_PTR[2] ; Add with.
    ADC #$80 ; Add ??
    STA SAVE_GAME_MOD_PAGE_PTR[2] ; Store to.
    LDA #$00 ; Seed ??
    ADC #$21 ; Add with.
    STA SAVE_GAME_MOD_PAGE_PTR+1 ; Store to. Macroy.
    LDA SAVE_GAME_MOD_PAGE_PTR[2] ; Load ??
    AND #$E0 ; Keep upper.
    STA RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY[8] ; Store to ??
    LDA SAVE_GAME_MOD_PAGE_PTR+1 ; Load ??
    AND #$03 ; Keep lower.
    LSR A ; >>
    ROR RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY[8] ; Rotate into.
    LSR A ; >> 
    ROR RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY[8] ; ROtate into.
    SEC ; Prep sub.
    LDA RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY[8] ; Load ??
    SBC #$19 ; Sub with.
    STA RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY[8] ; Store back.
    LDA SAVE_GAME_MOD_PAGE_PTR[2] ; Load ??
    ASL A ; << 3, *8.
    ASL A
    ASL A
    SEC ; Prep sub.
    SBC #$10 ; Sub with.
    STA RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY+1 ; Store to.
    LDX SCRIPT_UNK_BATTLE?_OBJECT_ID_FOCUSED? ; Load ??
    INX ; Index++
    LDA #$C0 ; Load base.
DO_COUNT: ; 17:032F, 0x02E32F
    CLC ; Prep add.
    ADC #$40 ; Add with.
    DEX ; Count--
    BNE DO_COUNT ; !=, goto.
    STA ALT_STUFF_COUNT? ; Store to.
    LDY #$02 ; Seed ??
COUNT_NONZERO_SETTLE_LOOP: ; 17:0339, 0x02E339
    JSR ENGINE_SETTLE_ALL_UPDATES? ; Settle engine.
    LDX #$00 ; Seed index.
    LDA #$05 ; Type of update.
    STA NMI_PPU_CMD_PACKETS_BUF[69],X ; Store to.
    INX ; ++
    LDA BCD/MODULO/DIGITS_USE_D ; Move addr A. TODO h/l
    STA NMI_PPU_CMD_PACKETS_BUF[69],X
    STA ALT_COUNT_UNK
    INX ; Index++
    LDA SAVE_GAME_MOD_PAGE_PTR+1 ; Move addr B.
    STA NMI_PPU_CMD_PACKETS_BUF[69],X
    INX ; Index++
    LDA SAVE_GAME_MOD_PAGE_PTR[2] ; Load ??
    STA NMI_PPU_CMD_PACKETS_BUF[69],X ; Store to.
COUNT_NONZERO: ; 17:0357, 0x02E357
    INY ; Stream++
    LDA [BCD/MODULO/DIGITS_USE_A],Y ; Load from stream.
    CLC ; Prep add.
    ADC ALT_STUFF_COUNT? ; Add with.
    INX ; Index++
    STA NMI_PPU_CMD_PACKETS_BUF[69],X ; Store to update packet.
    DEC ALT_COUNT_UNK ; Count--
    BNE COUNT_NONZERO ; != 0, goto.
    LDA #$00 ; Seed EOF.
    INX ; Index++
    STA NMI_PPU_CMD_PACKETS_BUF[69],X ; Store EOF.
    CLC ; Prep add.
    LDA SAVE_GAME_MOD_PAGE_PTR[2] ; Load.
    ADC #$20 ; += 0x20
    STA SAVE_GAME_MOD_PAGE_PTR[2] ; Store back.
    LDA SAVE_GAME_MOD_PAGE_PTR+1 ; Load PTR H.
    ADC #$00 ; Carry add.
    STA SAVE_GAME_MOD_PAGE_PTR+1 ; Store back.
    LDA #$00
    STA NMI_PPU_CMD_PACKETS_INDEX ; Reset index to trigger.
    LDA #$80
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO ; Set flag to trigger.
    DEC BCD/MODULO/DIGITS_USE_C ; --
    BNE COUNT_NONZERO_SETTLE_LOOP ; != 0, goto.
    LDX SCRIPT_INDEX_53_UNK ; Index ??
    LDA STREAM_INDEXES_ARR_UNK+6,X ; Load ??
    AND #$FC ; Keep upper.
    BEQ RTS ; == 0, goto.
    LSR A ; >> 2, /4.
    LSR A
    STA BCD/MODULO/DIGITS_USE_A ; Store to.
    ASL A ; << 1, *2.
    ADC BCD/MODULO/DIGITS_USE_A ; Add with /4 for total of 3/4 original val.
    CLC ; Prep add.
    ADC #$C8 ; Add with ptr base L.
    STA BCD/MODULO/DIGITS_USE_A ; Store to, ptr L.
    LDA #$00 ; Seed carry add.
    ADC #$97 ; Add with base ptr H.
    STA BCD/MODULO/DIGITS_USE_B ; Store, ptr H.
    LDY #$00 ; Seed stream index.
    LDA [BCD/MODULO/DIGITS_USE_A],Y ; Load from file.
    STA STREAM_PTRS_ARR_UNK+4,X ; Store to.
    LDA SCRIPT_UNK_BATTLE?_OBJECT_ID_FOCUSED? ; Load ??
    ASL A ; << 3, *8.
    ASL A
    ASL A
    TAX ; To X index.
    LDA #$00 ; Seed clear.
    STA OBJ?_BYTE_0x0_STATUS?,X ; Clear many of obj.
    STA OBJ?_BYTE_0x1_UNK,X
    STA OBJ?_BYTE_0x4_UNK,X
    STA OBJ?_BYTE_0x5_BYTE,X
    LDA RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY+1 ; Move ??
    STA OBJ?_BYTE_0x2_UNK,X
    LDA RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY[8] ; Move ??
    STA OBJ?_BYTE_0x3_UNK,X
    LDY #$01 ; Stream index.
    LDA [BCD/MODULO/DIGITS_USE_A],Y ; Move from file to obj.
    STA OBJ?_PTR?[2],X
    INY ; Stream++
    LDA [BCD/MODULO/DIGITS_USE_A],Y ; Move from file to obj.
    STA OBJ?_PTR?+1,X
RTS: ; 17:03D1, 0x02E3D1
    RTS ; Leave.
PPU_PACKET_SET_VAL_0xFF_COUNT_0x40_PPU_ADDR_XY: ; 17:03D2, 0x02E3D2
    JSR ENGINE_SETTLE_ALL_UPDATES? ; Settle.
    STX NMI_PPU_CMD_PACKETS_BUF+2
    STY NMI_PPU_CMD_PACKETS_BUF+3
    LDA #$08 ; Type, single byte count times.
    STA NMI_PPU_CMD_PACKETS_BUF[69] ; Store type.
    LDA #$40 ; Count.
    STA NMI_PPU_CMD_PACKETS_BUF+1
    LDA #$FF ; Byte, 0xFF.
    STA NMI_PPU_CMD_PACKETS_BUF+4
    LDA #$00 ; EOF.
    STA NMI_PPU_CMD_PACKETS_BUF+5
    LDA #$80 ; Flag set.
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO
    LDA #$00 ; Reset index for trigger.
    STA NMI_PPU_CMD_PACKETS_INDEX
    RTS ; Leave.
LIB_EXIT_IDFK: ; 17:03F8, 0x02E3F8
    CMP #$00 ; If _ #$00
    BEQ RTS ; ==, leave.
    PHA ; Save nonzero.
    JSR L_17:04BB
    JSR ENGINE_SET_MAPPER_R6_TO_0x00
    PLA
    CMP #$FF
    BNE L_17:042D
    SEC
    LDY R_**:$0054
    LDA STREAM_PTRS_ARR_UNK[48],Y
    SBC #$00
    STA FPTR_PACKET_CREATION/PTR_H_FILE_IDK[2]
    LDA STREAM_PTRS_ARR_UNK+1,Y
    SBC #$80
    ASL FPTR_PACKET_CREATION/PTR_H_FILE_IDK[2]
    ROL A
    ASL FPTR_PACKET_CREATION/PTR_H_FILE_IDK[2]
    ROL A
    ASL FPTR_PACKET_CREATION/PTR_H_FILE_IDK[2]
    ROL A
    CLC
    ADC #$14
    STA FPTR_PACKET_CREATION/PTR_H_FILE_IDK[2]
    LDA #$00
    ADC #$05
    STA ARG/PTR_L
    BCC L_17:044A
L_17:042D: ; 17:042D, 0x02E42D
    LDY #$00
    STY BCD/MODULO/DIGITS_USE_B
    ASL A
    ROL BCD/MODULO/DIGITS_USE_B
    CLC
    ADC #$81
    STA BCD/MODULO/DIGITS_USE_A
    LDA BCD/MODULO/DIGITS_USE_B
    ADC #$90
    STA BCD/MODULO/DIGITS_USE_B
    LDY #$00
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    STA FPTR_PACKET_CREATION/PTR_H_FILE_IDK[2]
    INY
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    STA ARG/PTR_L
L_17:044A: ; 17:044A, 0x02E44A
    JSR LIB_READING_PPU_ROM_$0110_HELPER
    LDA FPTR_PACKET_CREATION/PTR_H_FILE_IDK[2]
    STA R_**:$0050
    LDA FPTR_PACKET_CREATION/PTR_H_FILE_IDK+1
    STA R_**:$0051
    LDA R_**:$0052
    CMP #$03
    BNE L_17:0462
    LDX #$03
    JSR SUB_ADDRESSES_UNK_ENTRY_ADD
    DEC R_**:$0052
L_17:0462: ; 17:0462, 0x02E462
    JSR $A479
    CMP #$02
    BEQ L_17:046F
    INC R_**:$0052
    CMP #$00
    BNE L_17:044A
L_17:046F: ; 17:046F, 0x02E46F
    JSR ENGINE_SET_MAPPER_R6_TO_0x16
    LDX CURRENT_SAVE_MANIPULATION_PAGE+24
    JSR ENGINE_WAIT_X_SETTLES
RTS: ; 17:0478, 0x02E478
    RTS
    LDA R_**:$0052
    ASL A
    ADC #$03
    STA GFX_COORD_VERTICAL_OFFSET
    LDY #$00
    LDA [R_**:$0050],Y
    CMP #$03
    BNE 17:049D
    LDA #$0F
    STA GFX_COORD_HORIZONTAL_OFFSET
    JSR 1F:15C2
    INC R_**:$0050
    BNE 17:0495
    INC R_**:$0051
    LDY #$00
    LDA [R_**:$0050],Y
    CMP #$02
    BEQ 17:04BA
    LDA #$16
    STA R_**:$0070
    LDA #$05
    STA GFX_COORD_HORIZONTAL_OFFSET
    JSR ENGINE_SETTLE_ALL_UPDATES?
    LDA R_**:$0050
    STA FPTR_PACKET_CREATION/PTR_H_FILE_IDK[2]
    LDA R_**:$0051
    STA FPTR_PACKET_CREATION/PTR_H_FILE_IDK+1
    JSR RTN_SETTLE_UPDATE_TODO
    LDA #$01
    JSR SUB_MOD_PACKETS_TODO_UNK
    LDA ENGINE_SCRIPT_SWITCH_VAL?
    RTS
L_17:04BB: ; 17:04BB, 0x02E4BB
    LDA #$21
    STA CHARACTER_NAMES_ARR[8]
    STA **:$0588
    LDA #$80
    STA BCD/MODULO/DIGITS_USE_C
    LDA #$05
    STA BCD/MODULO/DIGITS_USE_D
    LDX SCRIPT_INDEX_53_UNK
    JSR $A4DA
    LDA #$88
    STA BCD/MODULO/DIGITS_USE_C
    LDA #$05
    STA BCD/MODULO/DIGITS_USE_D
    LDX R_**:$0054
    LDA STREAM_PTRS_ARR_UNK[48],X
    STA BCD/MODULO/DIGITS_USE_A
    LDA STREAM_PTRS_ARR_UNK+1,X
    STA BCD/MODULO/DIGITS_USE_B
    LDY #$18
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    PHA
    INY
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    LDY #$02
    STA [BCD/MODULO/DIGITS_USE_C],Y
    PLA
    DEY
    STA [BCD/MODULO/DIGITS_USE_C],Y
    INY
    INY
    LDA STREAM_PTRS_ARR_UNK+2,X
    AND #$1C
    BEQ 17:0505
    LSR A
    LSR A
    CLC
    ADC #$40
    STA [BCD/MODULO/DIGITS_USE_C],Y
    INY
    LDA #$00
    STA [BCD/MODULO/DIGITS_USE_C],Y
    RTS
SUB_UNK: ; 17:050A, 0x02E50A
    LDA #$00
    STA SCRIPT_INDEX_53_UNK
    LDY SCRIPT_INDEX_53_UNK
    LDA #$00
    STA STREAM_PTRS_ARR_UNK+5,Y
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$F7
    STA STREAM_PTRS_ARR_UNK+6,Y
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:0535
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$F4
    BNE 17:0535
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$20
    BNE 17:0535
    JSR $A53F
    BCS 17:050E
    CLC
    LDA SCRIPT_INDEX_53_UNK
    ADC #$20
    STA SCRIPT_INDEX_53_UNK
    BNE 17:050E
    RTS
    LDA R_**:$0059
    BNE 17:0559
    LDY SCRIPT_INDEX_53_UNK
    BMI 17:0559
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    AND #$06
    EOR #$06
    BEQ 17:0559
    JSR $A7DA
    BCS 17:0572
    LDA R_**:$0059
    BEQ 17:055C
    JSR $A573
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_PTRS_ARR_UNK+5,Y
    CMP #$53
    BEQ 17:0569
    CMP #$59
    BNE 17:0571
    LDA STREAM_PTRS_ARR_UNK+6,Y
    ORA #$08
    STA STREAM_PTRS_ARR_UNK+6,Y
    CLC
    RTS
    LDA SCRIPT_INDEX_53_UNK
    BMI 17:057A
    JMP $A57D
    JMP $A723
    LDY #$00
    STY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:0594
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    AND #$06
    EOR #$06
    BEQ 17:0594
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    BMI 17:059D
    TYA
    CLC
    ADC #$20
    TAY
    BPL 17:057F
    BMI 17:05A0
    JMP $A6B0
    LDY #$00
    STY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:05BC
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    BMI 17:05BC
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    AND #$06
    EOR #$06
    BEQ 17:05BC
    JSR ROUTINE_OBJ_HANDLE_UNK_A
    BCC 17:05C5
    TYA
    CLC
    ADC #$20
    TAY
    BPL 17:05A2
    BMI 17:05E9
    LDX #$00
    LDY #$00
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:05DB
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    BMI 17:05DB
    JSR ROUTINE_OBJ_HANDLE_UNK_A
    BCS 17:05DB
    INX
    STY R_**:$0054
    TYA
    CLC
    ADC #$20
    TAY
    BPL 17:05C9
    CPX #$01
    BCC 17:0611
    JMP $A623
    LDY #$00
    STY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:0604
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    AND #$06
    EOR #$06
    BEQ 17:0604
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    BMI 17:0604
    AND #$70
    BNE 17:060E
    TYA
    CLC
    ADC #$20
    TAY
    BPL 17:05EB
    JMP $A690
    JMP $A659
    LDA #$0C
    JSR $A6C2
    BCC 17:0622
    LDA #$0B
    JSR $A6C2
    BCC 17:0622
    JMP $A623
    RTS
    LDA #$0A
    JSR $A6C2
    BCC 17:0651
    LDA #$09
    JSR $A6C2
    BCC 17:0651
    LDA #$08
    JSR $A6C2
    BCC 17:0651
    LDY SCRIPT_INDEX_53_UNK
    JSR $BFAA
    BCS 17:05E9
    CPX #$7C
    BEQ 17:05E9
    CPX #$84
    BEQ 17:05E9
    TYA
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_INDEXES_ARR_UNK+16,Y
    TXA
    STA STREAM_PTRS_ARR_UNK+5,Y
    LDA R_**:$0054
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+4,Y
    RTS
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    TAX
    AND #$20
    BNE 17:0670
    TXA
    AND #$10
    BNE 17:0677
    TXA
    AND #$40
    BNE 17:067E
    JMP $A685
    LDA #$11
    JSR $A6C2
    BCC 17:0688
    LDA #$13
    JSR $A6C2
    BCC 17:0688
    LDA #$12
    JSR $A6C2
    BCC 17:0688
    JMP $A690
    LDA R_**:$0054
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+4,Y
    RTS
    LDY SCRIPT_INDEX_53_UNK
    LDA #$01
    STA STREAM_PTRS_ARR_UNK+5,Y
    JSR RANDOMIZE_GROUP_0x26
    AND #$E0
    ORA #$80
    TAY
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:0697
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    BMI 17:0697
    TYA
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+4,Y
    RTS
    LDA #$14
    JSR $A6C2
    BCC 17:06BA
    JMP $A5A0
    LDY SCRIPT_INDEX_53_UNK
    LDA R_**:$0054
    STA STREAM_PTRS_ARR_UNK+4,Y
    RTS
    STA BCD/MODULO/DIGITS_USE_A
    JSR $A86B
    LDA BCD/MODULO/DIGITS_USE_A
    LSR A
    LSR A
    LSR A
    TAY
    LDA BCD/MODULO/DIGITS_USE_A
    AND #$07
    TAX
    INX
    SEC
    LDA #$00
    ROR A
    DEX
    BNE 17:06D6
    STA BCD/MODULO/DIGITS_USE_B
    LDA [FPTR_5C_UNK[2]],Y
    AND BCD/MODULO/DIGITS_USE_B
    BEQ 17:0721
    LDA #$00
    ASL BCD/MODULO/DIGITS_USE_A
    ROL A
    ASL BCD/MODULO/DIGITS_USE_A
    ROL A
    ASL BCD/MODULO/DIGITS_USE_A
    ROL A
    STA BCD/MODULO/DIGITS_USE_B
    CLC
    LDA BCD/MODULO/DIGITS_USE_A
    ADC #$00
    STA BCD/MODULO/DIGITS_USE_A
    LDA BCD/MODULO/DIGITS_USE_B
    ADC #$9E
    STA BCD/MODULO/DIGITS_USE_B
    JSR ENGINE_SET_MAPPER_R6_TO_0x00
    LDY #$05
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+5,Y
    LDY #$07
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    STA SUB/MOD_VAL_UNK_WORD[2]
    LDA #$00
    STA SUB/MOD_VAL_UNK_WORD+1
    JSR ENGINE_SET_MAPPER_R6_TO_0x16
    JSR $B1D1
    BCC 17:0721
    JSR $B1C5
    BCC 17:0721
    CLC
    RTS
    SEC
    RTS
    JSR RANDOMIZE_GROUP_0x26
    AND #$07
    CLC
    ADC SCRIPT_INDEX_53_UNK
    TAY
    LDA STREAM_INDEXES_ARR_UNK+16,Y
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+5,Y
    JSR $AC23
    JSR SWITCH_TABLE_PAST_JSR_HELPER
    .db A3
    .db A7
    .db 40
    .db A7
    .db 4A
    .db A7
    JSR $A7AB
    LDA R_**:$0054
    BPL 17:0740
    JMP $A7A3
    LDA SCRIPT_INDEX_53_UNK
    BPL 17:0796
    LDA 56_THING_NAME_SIZE
    CMP #$03
    BNE 17:0760
    LDX #$03
    LDA #$06
    JSR $A7BE
    BCS 17:07A0
    DEX
    BPL 17:0756
    LDA 56_THING_NAME_SIZE
    CMP #$04
    BNE 17:078A
    LDX #$03
    LDA #$01
    JSR $A7BE
    BCS 17:07A0
    DEX
    BPL 17:0768
    LDX #$03
    LDA #$02
    JSR $A7BE
    BCS 17:07A0
    DEX
    BPL 17:0774
    LDX #$03
    LDA #$04
    JSR $A7BE
    BCS 17:07A0
    DEX
    BPL 17:0780
    LDX #$03
    LDA #$07
    JSR $A7BE
    BCS 17:07A0
    DEX
    BPL 17:078C
    JSR $A7AB
    LDA R_**:$0054
    BMI 17:0796
    JMP $A7A3
    JMP $A7A3
    LDA R_**:$0054
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+4,Y
    RTS
    JSR RANDOMIZE_GROUP_0x26
    AND #$E0
    TAY
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:07AB
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    BMI 17:07AB
    STY R_**:$0054
    RTS
    CMP CURRENT_SAVE_MANIPULATION_PAGE+8,X
    BNE 17:07D8
    TXA
    ASL A
    ASL A
    ASL A
    ASL A
    ASL A
    TAY
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:07D8
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    BMI 17:07D8
    STY R_**:$0054
    SEC
    RTS
    CLC
    RTS
    JSR 17:0C06
    LDA #$02
    LDX CURRENT_SAVE_MANIPULATION_PAGE+540
    BPL 17:07E6
    LDA #$13
    JSR LIB_SUB_TODO ; Do ??
    JSR SUB_UNK ; Do sub.
    JSR SWITCH_TABLE_PAST_JSR_HELPER ; Switch on below.
    LOW(RTN_A)
    HIGH(RTN_A)
    LOW(RTN_B)
    HIGH(RTN_B)
    LOW(RTN_C)
    HIGH(RTN_C)
    LOW(RTN_D)
    HIGH(RTN_D)
    LOW(RTN_E)
    HIGH(RTN_E)
    LOW(RTN_F)
    HIGH(RTN_F)
    LOW(RTN_G)
    HIGH(RTN_G)
    LOW(RTN_H)
    HIGH(RTN_H)
    LOW(RTN_I)
    HIGH(RTN_I)
    .db 60 ; Leave? Extra probs.
RTN_A: ; 17:0802, 0x02E802
    LDA #$01
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+5,Y
    JSR $A962
    BCC 17:0811
    JMP $A7DD
    JMP $A801
RTN_B: ; 17:0814, 0x02E814
    JSR ENGINE_SETTLE_ALL_UPDATES?
    LDA #$01
    STA R_**:$0059
    LDA #$14
    STA **:$03E6
    LDA #$97
    STA **:$03E7
    LDA #$04
    STA R_**:$03E0
    LDA #$00
    STA SPRITE_SLOT_Y_OFF_SCREEN_UNK
    STA **:$03E4
    STA **:$03E5
    LDA #$D0
    STA **:$03E2
    LDA #$47
    STA **:$03E3
    LDA #$01
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO
    CLC
    JMP $A801
RTN_C: ; 17:0847, 0x02E847
    JSR $A86B
    LDA #$00
    STA BCD/MODULO/DIGITS_USE_A
    LDY #$07
    LDA [FPTR_5C_UNK[2]],Y
    ORA BCD/MODULO/DIGITS_USE_A
    STA BCD/MODULO/DIGITS_USE_A
    DEY
    BNE 17:0850
    LDA BCD/MODULO/DIGITS_USE_A
    BEQ 17:0868
    JSR $AB10
    BCS 17:0865
    JMP $A801
    JMP $A7DA
    JMP $A7DD
    LDY SCRIPT_INDEX_53_UNK
    CLC
    LDA STREAM_PTRS_ARR_UNK[48],Y
    ADC #$30
    STA FPTR_5C_UNK[2]
    LDA STREAM_PTRS_ARR_UNK+1,Y
    ADC #$00
    STA FPTR_5C_UNK+1
    RTS
RTN_D: ; 17:087D, 0x02E87D
    LDA #$59
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+5,Y
    CLC
    JMP $A801
RTN_E: ; 17:0888, 0x02E888
    LDY SCRIPT_INDEX_53_UNK
    CLC
    LDA STREAM_PTRS_ARR_UNK[48],Y
    ADC #$20
    STA FPTR_5C_UNK[2]
    LDA STREAM_PTRS_ARR_UNK+1,Y
    ADC #$00
    STA FPTR_5C_UNK+1
    LDA #$00
    STA BCD/MODULO/DIGITS_USE_A
    LDY #$07
    LDA [FPTR_5C_UNK[2]],Y
    ORA BCD/MODULO/DIGITS_USE_A
    STA BCD/MODULO/DIGITS_USE_A
    DEY
    BPL 17:089F
    LDA BCD/MODULO/DIGITS_USE_A
    BEQ 17:08B7
    JSR $AA08
    BCS 17:08B4
    JMP $A801
    JMP $A7DA
    JMP $A7DD
RTN_F: ; 17:08BA, 0x02E8BA
    LDA #$48
    JMP $A87F
RTN_G: ; 17:08BF, 0x02E8BF
    LDA #$80
    STA R_**:$0054
    JSR $A991
    BCS 17:08DF
    LDX MENU_SELECTED_SUBMENU_OPTION_INDEX_FINAL
    LDA **:$0591,X
    TAX
    DEX
    TXA
    STA R_**:$0054
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+4,Y
    LDA #$6F
    STA STREAM_PTRS_ARR_UNK+5,Y
    JMP $A801
    JMP $A7DD
RTN_H: ; 17:08E2, 0x02E8E2
    LDA #$1C
    JMP $A87F
RTN_I: ; 17:08E7, 0x02E8E7
    SEC
    LDA SCRIPT_INDEX_53_UNK
    BEQ 17:0909
    SBC #$20
    STA SCRIPT_INDEX_53_UNK
    TAY
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ RTN_I
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    BMI RTN_I
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$F4
    BNE RTN_I
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$20
    BNE RTN_I
    SEC
    JMP $A801
SUB_UNK: ; 17:090D, 0x02E90D
    LDX #$73
    LDY #$9F
    LDA 56_THING_NAME_SIZE
    CMP #$01
    BNE 17:091E
    LDX #$83
    LDY #$9F
    JMP $A927
    LDA CURRENT_SAVE_MANIPULATION_PAGE+540
    BPL 17:0927
    LDX #$7B
    LDY #$9F
    STX FPTR_MENU_SUBMENU[2]
    STY FPTR_MENU_SUBMENU+1
    LDX #$6B
    LDY #$9F
    STX FPTR_MENU_MASTER[2]
    STY FPTR_MENU_MASTER+1
    JSR ENGINE_MENU_INIT_MASTER_PARTIAL
    BIT SCRIPT_MENU_STATUS
    BVS 17:0942
    LDA #$09
    JSR $A945
    LDA MENU_SELECTED_SUBMENU_OPTION_INDEX_FINAL
    RTS
    LDA #$08
    RTS
    STA BCD/MODULO/DIGITS_USE_A
    LDA MENU_SELECTED_SUBMENU_OPTION_INDEX_FINAL
    LSR A
    ASL A
    CLC
    ADC GFX_COORD_VERTICAL_OFFSET
    STA GFX_COORD_VERTICAL_OFFSET
    LDA MENU_SELECTED_SUBMENU_OPTION_INDEX_FINAL
    AND #$01
    BEQ 17:095D
    CLC
    LDA GFX_COORD_HORIZONTAL_OFFSET
    ADC BCD/MODULO/DIGITS_USE_A
    STA GFX_COORD_HORIZONTAL_OFFSET
    LDA #$0D
    JMP LIB_SUB_TODO
    JSR $AC23
    BEQ 17:098D
    LDX #$80
    CMP #$02
    BEQ 17:096F
    LDX #$00
    STX BCD/MODULO/DIGITS_USE_A
    LDA SCRIPT_INDEX_53_UNK
    AND #$80
    EOR BCD/MODULO/DIGITS_USE_A
    STA R_**:$0054
    JSR $A991
    BCS 17:098F
    LDX MENU_SELECTED_SUBMENU_OPTION_INDEX_FINAL
    LDA **:$0591,X
    TAX
    DEX
    TXA
    STA R_**:$0054
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+4,Y
    CLC
    RTS
    SEC
    RTS
    LDA #$0B
    JSR LIB_SUB_TODO
    JSR $A9B3
    LDA #$8B
    STA FPTR_MENU_MASTER[2]
    LDA #$9F
    STA FPTR_MENU_MASTER+1
    JSR ENGINE_MENU_INIT_MASTER_FULL
    BIT SCRIPT_MENU_STATUS
    BVS 17:09B1
    BMI 17:09AD
    JMP $A991
    LDA MENU_SELECTED_SUBMENU_OPTION_INDEX_FINAL
    CLC
    RTS
    SEC
    RTS
    LDA #$12
    STA GFX_COORD_VERTICAL_OFFSET
    LDX #$00
    STX **:$0591
    STX **:$0592
    STX **:$0593
    STX **:$0594
    INX
    STX **:$0590
    LDA R_**:$0054
    PHA
    LDY #$04
    TYA
    PHA
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:09F8
    LDY R_**:$0054
    BMI 17:09E4
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    AND #$06
    EOR #$06
    BEQ 17:09F8
    INY
    TYA
    STA **:$0590,X
    INX
    TXA
    PHA
    JSR $A4BB
    LDA #$0C
    JSR LIB_SUB_TODO
    INC GFX_COORD_VERTICAL_OFFSET
    PLA
    TAX
    CLC
    LDA R_**:$0054
    ADC #$20
    STA R_**:$0054
    PLA
    TAY
    DEY
    BNE 17:09CE
    PLA
    STA R_**:$0054
    RTS
    LDA #$0E
    JSR LIB_SUB_TODO
    JSR $AA67
    JSR $AAE9
    BCS 17:0A65
    LDY SCRIPT_INDEX_53_UNK
    LDA MENU_SELECTED_SUBMENU_OPTION_INDEX_FINAL
    STA STREAM_INDEXES_ARR_UNK+16,Y
    LDY MENU_SELECTED_SUBMENU_OPTION_INDEX_FINAL
    LDA [FPTR_5C_UNK[2]],Y
    JSR $AAA4
    LDY SCRIPT_INDEX_53_UNK
    JSR $AC49
    BCS 17:0A43
    JSR ENGINE_SET_MAPPER_R6_TO_0x00
    LDY #$05
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    JSR ENGINE_SET_MAPPER_R6_TO_0x16
    CMP #$00
    BEQ 17:0A4C
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+5,Y
    JSR $A962
    BCS 17:0A65
    RTS
    LDX SCRIPT_INDEX_53_UNK
    JSR $A4BB
    LDX #$14
    BNE 17:0A5E
    LDX #$10
    JSR ENGINE_SET_MAPPER_R6_TO_0x00
    LDY #$03
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    JSR ENGINE_SET_MAPPER_R6_TO_0x16
    CMP #$00
    BEQ 17:0A5E
    LDX #$11
    TXA
    JSR LIB_SUB_TODO
    JSR SCRIPT_CTRL_WAIT_A/B_PRESSED
    SEC
    RTS
    LDY #$00
    TYA
    PHA
    AND #$01
    TAX
    LDA $9FB2,X
    STA GFX_COORD_HORIZONTAL_OFFSET
    TYA
    LSR A
    TAX
    LDA $9FB4,X
    STA GFX_COORD_VERTICAL_OFFSET
    LDA [FPTR_5C_UNK[2]],Y
    BEQ 17:0A9C
    JSR $AAA4
    JSR ENGINE_SET_MAPPER_R6_TO_0x00
    LDA #$04
    STA **:$0588
    LDY #$00
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    STA **:$0589
    INY
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    STA **:$058A
    LDA #$0F
    JSR LIB_SUB_TODO
    PLA
    TAY
    INY
    CPY #$08
    BNE 17:0A69
    RTS
    LDX #$00
    STX BCD/MODULO/DIGITS_USE_D
    LDX #$03
    ASL A
    ROL BCD/MODULO/DIGITS_USE_D
    DEX
    BNE 17:0AAA
    CLC
    ADC #$00
    STA BCD/MODULO/DIGITS_USE_C
    LDA BCD/MODULO/DIGITS_USE_D
    ADC #$98
    STA BCD/MODULO/DIGITS_USE_D
    RTS
    CLC
    LDA STREAM_PTRS_ARR_UNK[48],Y
    ADC #$20
    STA BCD/MODULO/DIGITS_USE_A
    LDA STREAM_PTRS_ARR_UNK+1,Y
    ADC #$00
    STA BCD/MODULO/DIGITS_USE_B
    RTS
    JSR ENGINE_SET_MAPPER_R6_TO_0x00
    LDA #$21
    STA **:$0590
    LDY #$00
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    STA **:$0591
    INY
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    STA **:$0592
    LDA #$00
    STA **:$0593
    JMP ENGINE_SET_MAPPER_R6_TO_0x16
    LDA #$95
    STA FPTR_MENU_MASTER[2]
    LDA #$9F
    STA FPTR_MENU_MASTER+1
    LDA FPTR_5C_UNK[2]
    STA FPTR_MENU_SUBMENU[2]
    LDA FPTR_5C_UNK+1
    STA FPTR_MENU_SUBMENU+1
    JSR ENGINE_MENU_INIT_MASTER_PARTIAL
    BIT SCRIPT_MENU_STATUS
    BVS 17:0B0E
    BMI 17:0B05
    JMP $AAE9
    LDA #$0C
    JSR $A945
    LDA MENU_SELECTED_SUBMENU_OPTION_INDEX_FINAL
    CLC
    RTS
    SEC
    RTS
    LDY #$01
    LDA [FPTR_5C_UNK[2]],Y
    BEQ 17:0B32
    TYA
    PHA
    LDA #$0E
    JSR LIB_SUB_TODO
    LDA #$12
    JSR LIB_SUB_TODO
    JSR $AB61
    JSR $ABC2
    PLA
    TAY
    CPX #$01
    BEQ 17:0B39
    CPX #$02
    BEQ 17:0B5F
    INY
    CPY #$08
    BEQ 17:0B10
    BNE 17:0B12
    LDY MENU_SELECTED_SUBMENU_OPTION_INDEX_FINAL
    LDA CHARACTER_NAMES_ARR[8],Y
    JSR LIB_PTR_CREATE_UNK
    JSR ENGINE_SET_MAPPER_R6_TO_0x00
    LDY #$05
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    BEQ 17:0B57
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+5,Y
    PHA
    JSR ENGINE_SET_MAPPER_R6_TO_0x16
    PLA
    JMP $A962
    LDA #$10
    JSR LIB_SUB_TODO
    JSR SCRIPT_CTRL_WAIT_A/B_PRESSED
    SEC
    RTS
    TYA
    ASL A
    ASL A
    ASL A
    STA BCD/MODULO/DIGITS_USE_A
    LDA #$80
    STA BCD/MODULO/DIGITS_USE_B
    LDX #$00
    LDA #$00
    STA CHARACTER_NAMES_ARR[8],X
    LDA [FPTR_5C_UNK[2]],Y
    AND BCD/MODULO/DIGITS_USE_B
    BEQ 17:0B7D
    LDA BCD/MODULO/DIGITS_USE_A
    STA CHARACTER_NAMES_ARR[8],X
    INC BCD/MODULO/DIGITS_USE_A
    INX
    LSR BCD/MODULO/DIGITS_USE_B
    BCC 17:0B6D
    LDY #$00
    TYA
    PHA
    AND #$01
    TAX
    LDA $9FB2,X
    STA GFX_COORD_HORIZONTAL_OFFSET
    TYA
    LSR A
    TAX
    LDA $9FB4,X
    STA GFX_COORD_VERTICAL_OFFSET
    LDA CHARACTER_NAMES_ARR[8],Y
    BEQ 17:0BBA
    JSR LIB_PTR_CREATE_UNK
    JSR ENGINE_SET_MAPPER_R6_TO_0x00
    LDA #$04
    STA **:$0588
    LDY #$00
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    STA **:$0589
    INY
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    STA **:$058A
    LDA #$0F
    JSR LIB_SUB_TODO
    PLA
    TAY
    INY
    CPY #$08
    BNE 17:0B86
    RTS
    LDA #$A7
    STA FPTR_MENU_MASTER[2]
    LDA #$9F
    STA FPTR_MENU_MASTER+1
    JSR ENGINE_MENU_INIT_MASTER_FULL
    LDA SCRIPT_MENU_STATUS
    AND #$06
    BNE 17:0BE6
    LDA SCRIPT_MENU_STATUS
    AND #$81
    BNE 17:0BE0
    BIT SCRIPT_MENU_STATUS
    BVS 17:0BE3
    JMP $ABC2
    LDX #$00
    RTS
    LDX #$02
    RTS
    LDA #$9D
    STA FPTR_MENU_MASTER[2]
    LDA #$9F
    STA FPTR_MENU_MASTER+1
    JSR ENGINE_MENU_INIT_MASTER_FULL
    LDA SCRIPT_MENU_STATUS
    AND #$08
    BNE 17:0BC2
    BIT SCRIPT_MENU_STATUS
    BVS 17:0C03
    BMI 17:0C00
    JMP $ABC2
    LDX #$01
    RTS
    LDX #$02
    RTS
    LDA #$0A
    JSR LIB_SUB_TODO
    JSR L_17:04BB
    JSR ENGINE_SET_MAPPER_R6_TO_0x00
    LDA #$00
    STA R_**:$0070
    LDA #$7A
    STA FPTR_PACKET_CREATION/PTR_H_FILE_IDK[2]
    LDA #$8E
    STA FPTR_PACKET_CREATION/PTR_H_FILE_IDK+1
    JSR ENGINE_CREATE_UPDATE_BUF_INIT_DEC?
    JMP ENGINE_SET_MAPPER_R6_TO_0x16
    PHA
    AND #$03
    TAX
    INX
    LDA #$01
    SEC
    ROR A
    ROR A
    DEX
    BNE 17:0C2B
    STA BCD/MODULO/DIGITS_USE_A
    PLA
    LSR A
    LSR A
    TAY
    LDA $9EC7,Y
    AND BCD/MODULO/DIGITS_USE_A
    STA BCD/MODULO/DIGITS_USE_B
    LSR BCD/MODULO/DIGITS_USE_A
    BCS 17:0C46
    LSR BCD/MODULO/DIGITS_USE_B
    JMP $AC3D
    LDA BCD/MODULO/DIGITS_USE_B
    RTS
    JSR ENGINE_SET_MAPPER_R6_TO_0x00
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    STA SAVE_GAME_MOD_PAGE_PTR[2]
    TAX
    SEC
    LDA #$00
    ROL A
    DEX
    BNE 17:0C55
    STA ALT_COUNT_UNK
    LDY #$02
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    JSR ENGINE_SET_MAPPER_R6_TO_0x16
    AND ALT_COUNT_UNK
    BEQ 17:0C68
    CLC
    RTS
    SEC
    RTS
SUB_TODO: ; 17:0C6A, 0x02EC6A
    JSR SUB_UNK
    BCS EXIT_CS
    LDX #$08
L_17:0C71: ; 17:0C71, 0x02EC71
    TXA
    PHA
    JSR L_17:0CA5
    JSR L_17:0CD6
    LDA #$FF
    LDY SCRIPT_INDEX_53_UNK
    STA STREAM_PTRS_ARR_UNK+5,Y
    JSR SUB_UNK
    BCS EXIT_STACK_FIX_CS
    PLA
    TAX
    DEX
    BNE L_17:0C71
    DEC SCRIPT_UNK_BATTLE?_OBJECT_ID_FOCUSED?
    BEQ L_17:0C93
    CLC
    RTS
EXIT_STACK_FIX_CS: ; 17:0C90, 0x02EC90
    PLA
EXIT_CS: ; 17:0C91, 0x02EC91
    SEC
    RTS
L_17:0C93: ; 17:0C93, 0x02EC93
    LDA 56_THING_NAME_SIZE
    CMP #$01
    BEQ EXIT_CS
    LDX #$64
    JSR ENGINE_WAIT_X_SETTLES
    LDA #$92
    JSR LIB_EXIT_IDFK
EXIT_CS: ; 17:0CA3, 0x02ECA3
    SEC
    RTS
L_17:0CA5: ; 17:0CA5, 0x02ECA5
    LDA #$00
    STA BCD/MODULO/DIGITS_USE_A
    STA BCD/MODULO/DIGITS_USE_B
L_17:0CAB: ; 17:0CAB, 0x02ECAB
    LDY BCD/MODULO/DIGITS_USE_A
    LDA STREAM_PTRS_ARR_UNK+5,Y
    CMP #$FF
    BEQ L_17:0CC8
    CMP #$5E
    BEQ L_17:0CD3
    LDA STREAM_INDEXES_ARR_UNK+12,Y
    JSR MISC_RESTORE_REPLACE_AND_RESTORE_UNK
    CMP BCD/MODULO/DIGITS_USE_B
    BCC L_17:0CC8
    STA BCD/MODULO/DIGITS_USE_B
    LDA BCD/MODULO/DIGITS_USE_A
    STA BCD/MODULO/DIGITS_USE_C
L_17:0CC8: ; 17:0CC8, 0x02ECC8
    CLC
    LDA BCD/MODULO/DIGITS_USE_A
    ADC #$20
    STA BCD/MODULO/DIGITS_USE_A
    BNE L_17:0CAB
    LDY BCD/MODULO/DIGITS_USE_C
L_17:0CD3: ; 17:0CD3, 0x02ECD3
    STY SCRIPT_INDEX_53_UNK
    RTS
L_17:0CD6: ; 17:0CD6, 0x02ECD6
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BNE 17:0CE2
    LDA #$00
    JMP $ADC1
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$80
    BEQ 17:0CEE
    LDA #$00
    JMP $ADC1
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$40
    BEQ 17:0CFA
    LDA #$47
    JMP $ADC1
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$20
    BEQ 17:0D06
    LDA #$46
    JMP $ADC1
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$10
    BEQ 17:0D2B
    JSR RANDOMIZE_GROUP_0x26
    AND #$E0
    BNE 17:0D26
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$EF
    STA STREAM_INDEXES_ARR_UNK+1,Y
    STY R_**:$0054
    JSR 1F:15E5
    LDA #$8E
    JMP $ADC1
    LDA #$3C
    JMP $ADC1
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$04
    BEQ 17:0D37
    LDA #$68
    JMP $ADC1
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$02
    BEQ 17:0D4A
    LDA STREAM_PTRS_ARR_UNK+5,Y
    CMP #$76
    BEQ 17:0D4A
    LDA #$56
    JMP $ADC1
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$20
    BEQ 17:0D6A
    JSR RANDOMIZE_GROUP_0x26
    AND #$C0
    BNE 17:0D65
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$DF
    STA STREAM_PTRS_ARR_UNK+6,Y
    LDA #$8B
    JMP $ADC1
    LDA #$1C
    JMP $ADC1
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$08
    BEQ 17:0D76
    LDA #$3A
    JSR $A3F8
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_PTRS_ARR_UNK+5,Y
    LDY #$00
    STY BCD/MODULO/DIGITS_USE_B
    ASL A
    ROL BCD/MODULO/DIGITS_USE_B
    STA BCD/MODULO/DIGITS_USE_A
    CLC
    LDA #$FB
    ADC BCD/MODULO/DIGITS_USE_A
    STA BCD/MODULO/DIGITS_USE_A
    LDA #$97
    ADC BCD/MODULO/DIGITS_USE_B
    STA BCD/MODULO/DIGITS_USE_B
    LDY #$00
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    STA FPTR_UNK_BANK_17_PTR[2]
    INY
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    STA FPTR_UNK_BANK_17_PTR+1
    LDY #$00
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    LSR A
    LSR A
    LSR A
    LSR A
    JSR SWITCH_TABLE_PAST_JSR_HELPER
    LOW(RTN_A_ADVANCE_SWITCH_FILE_0x1)
    HIGH(RTN_A_ADVANCE_SWITCH_FILE_0x1)
    LOW(RTN_B)
    HIGH(RTN_B)
    LOW(RTN_C)
    HIGH(RTN_C)
    LOW(RTN_D)
    HIGH(RTN_D)
    LOW(RTN_E)
    HIGH(RTN_E)
    LOW(RTN_F)
    HIGH(RTN_F)
    LOW(RTN_G)
    HIGH(RTN_G)
    LOW(RTN_H)
    HIGH(RTN_H)
    LOW(RTN_I)
    HIGH(RTN_I)
    LOW(RTN_J)
    HIGH(RTN_J)
    LOW(RTN_K)
    HIGH(RTN_K)
    LOW(RTN_L)
    HIGH(RTN_L)
    LOW(RTN_M)
    HIGH(RTN_M)
    LOW(RTN_N)
    HIGH(RTN_N)
    .db A3 ; TODO mistake byte?
RTN_A_ADVANCE_SWITCH_FILE_0x1: ; 17:0DC4, 0x02EDC4
    LDA #$01
    JMP ADVANCE_FPTR_UNK_0x1
RTN_B: ; 17:0DC9, 0x02EDC9
    LDY #$00
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    AND #$0F
    JSR SWITCH_TABLE_PAST_JSR_INDIRECT
    LOW(RTN_A_ALT)
    HIGH(RTN_A_ALT)
    LOW(RTN_B_ALT)
    HIGH(RTN_B_ALT)
    LOW(RTN_C_ALT)
    HIGH(RTN_C_ALT)
    LOW(RTN_D_ALT)
    HIGH(RTN_D_ALT)
    LOW(RTN_E_ALT)
    HIGH(RTN_E_ALT)
    LOW(RTN_F_ALT)
    HIGH(RTN_F_ALT)
    LOW(RTN_G_ALT)
    HIGH(RTN_G_ALT)
    LOW(RTN_H_ALT)
    HIGH(RTN_H_ALT)
    LOW(RTN_I_ALT)
    HIGH(RTN_I_ALT)
    LOW(RTN_J_ALT)
    HIGH(RTN_J_ALT)
    LOW(RTN_K_ALT)
    HIGH(RTN_K_ALT)
    LOW(RTN_L_ALT)
    HIGH(RTN_L_ALT)
    LOW(RTN_M_ALT)
    HIGH(RTN_M_ALT)
RTN_A_ALT: ; 17:0DEC, 0x02EDEC
    LDA #$01
    JMP 17:0FCD
RTN_C: ; 17:0DF1, 0x02EDF1
    LDY #$01
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    LDX #$00
    STX BCD/MODULO/DIGITS_USE_B
    LDX #$03
    ASL A
    ROL BCD/MODULO/DIGITS_USE_B
    DEX
    BNE 17:0DFB
    CLC
    ADC #$00
    STA BCD/MODULO/DIGITS_USE_A
    LDA BCD/MODULO/DIGITS_USE_B
    ADC #$9E
    STA BCD/MODULO/DIGITS_USE_B
    JSR ENGINE_SET_MAPPER_R6_TO_0x00
    LDY #$07
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    STA SUB/MOD_VAL_UNK_WORD[2]
    LDA #$00
    STA SUB/MOD_VAL_UNK_WORD+1
    LDA #$21
    STA **:$0590
    LDY #$00
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    STA **:$0591
    INY
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    STA **:$0592
    LDA #$00
    STA **:$0593
    JSR ENGINE_SET_MAPPER_R6_TO_0x16
    LDA #$64
    JSR $A3F8
    JSR $B1C5
    BCC 17:0E53
    JSR $B1D1
    BCC 17:0E58
    JSR $B0A4
    LDA R_**:$0058
    JSR LIB_DIRECT_ENTRY_TOSOLVE
    LDA #$00
    STA R_**:$0058
    LDA #$02
    JMP $AFCD
    LDA #$51
    JMP $A3F8
    LDA #$54
    JMP $A3F8
RTN_D: ; 17:0E5D, 0x02EE5D
    LDY #$01
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    JSR $AAA4
    JSR $AACC
    LDY SCRIPT_INDEX_53_UNK
    BMI 17:0E7B
    JSR ENGINE_WRAM_STATE_WRITEABLE
    LDY #$00
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    AND #$0F
    CMP #$01
    BNE 17:0E7B
    JSR $B4E5
    LDA #$63
    JSR $A3F8
    LDA R_**:$0058
    JSR LIB_DIRECT_ENTRY_TOSOLVE
    LDA #$00
    STA R_**:$0058
    LDA #$02
    JMP $AFCD
RTN_M: ; 17:0E8E, 0x02EE8E
    LDY #$01
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    JSR $AAA4
    JSR $AACC
    LDY SCRIPT_INDEX_53_UNK
    BMI 17:0EE5
    LDY #$00
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    AND #$0F
    JSR SWITCH_TABLE_PAST_JSR_HELPER
    LOW(RTN_A_ALT4)
    HIGH(RTN_A_ALT4)
    LOW(RTN_B_ALT4)
    HIGH(RTN_B_ALT4)
    LOW(17:0ECF)
    HIGH(17:0ECF)
RTN_A_ALT4: ; 17:0EAB, 0x02EEAB
    JSR RANDOMIZE_GROUP_0x26
    AND #$E0
    BNE 17:0EE5
    JSR $B4E5
    LDA #$75
    JSR $A3F8
    JMP $AEE5
RTN_B_ALT4: ; 17:0EBD, 0x02EEBD
    JSR RANDOMIZE_GROUP_0x26
    AND #$E0
    BNE 17:0EE5
    JSR $B4E5
    LDA #$78
    JSR $A3F8
    JMP $AEE5
    JSR ENGINE_WRAM_STATE_WRITEABLE
    DEC CURRENT_SAVE_MANIPULATION_PAGE+31
    JSR ENGINE_WRAM_STATE_WRITE_DISABLED
    LDA CURRENT_SAVE_MANIPULATION_PAGE+31
    BNE 17:0EE5
    JSR $B4E5
    LDA #$91
    JSR $A3F8
    LDA #$02
    JMP $AFCD
RTN_F: ; 17:0EEA, 0x02EEEA
    LDY #$00
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    AND #$0F
    JSR SWITCH_TABLE_PAST_JSR_INDIRECT
    LOW(RTN_A_ALT2)
    HIGH(RTN_A_ALT2)
    LOW(RTN_B_ALT2)
    HIGH(RTN_B_ALT2)
    LOW(RTN_C_ALT2)
    HIGH(RTN_C_ALT2)
    LOW(RTN_D_ALT2)
    HIGH(RTN_D_ALT2)
    LOW(RTN_E_ALT2)
    HIGH(RTN_E_ALT2)
    LOW(RTN_F_ALT2)
    HIGH(RTN_F_ALT2)
    LOW(RTN_G_ALT2)
    HIGH(RTN_G_ALT2)
    LOW(RTN_G_ALT2)
    HIGH(RTN_G_ALT2)
RTN_A_ALT2: ; 17:0F03, 0x02EF03
    LDA #$01
    JMP 17:0FCD
RTN_G: ; 17:0F08, 0x02EF08
    LDY #$01
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    STA SAVE_GAME_MOD_PAGE_PTR[2]
    DEY
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    AND #$0F
    JSR SWITCH_TABLE_PAST_JSR_INDIRECT
    LOW(RTN_A_ALT_3)
    HIGH(RTN_A_ALT_3)
    LOW(RTN_B_ALT3)
    HIGH(RTN_B_ALT3)
    LOW(RTN_C_ALT3)
    HIGH(RTN_C_ALT3)
    LOW(RTN_D_ALT3)
    HIGH(RTN_D_ALT3)
    LOW(RTN_E_ALT3)
    HIGH(RTN_E_ALT3)
    LOW(RTN_F_ALT3)
    HIGH(RTN_F_ALT3)
    LOW(RTN_G_ALT3)
    HIGH(RTN_G_ALT3)
    LOW(RTN_H_ALT3)
    HIGH(RTN_H_ALT3)
    LOW(RTN_I_ALT3)
    HIGH(RTN_I_ALT3)
    LOW(RTN_J_ALT3)
    HIGH(RTN_J_ALT3)
    LOW(RTN_K_ALT3)
    HIGH(RTN_K_ALT3)
RTN_A_ALT_3: ; 17:0F2C, 0x02EF2C
    LDA #$02
    JMP $AFCD
RTN_H: ; 17:0F31, 0x02EF31
    JSR $AF53
    BCC 17:0F3E
    JMP $AF4E
RTN_I: ; 17:0F39, 0x02EF39
    JSR $AF53
    BCC 17:0F4E
    LDY #$01
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    PHA
    INY
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    STA FPTR_UNK_BANK_17_PTR+1
    PLA
    STA FPTR_UNK_BANK_17_PTR[2]
    JMP $AD9C
    LDA #$03
    JMP $AFCD
    LDY #$00
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    AND #$0F
    JSR SWITCH_TABLE_PAST_JSR_INDIRECT
    LOW(RTN_A_ALT5)
    HIGH(RTN_A_ALT5)
    LOW(RTN_B_ALT5)
    HIGH(RTN_B_ALT5)
    LOW(RTN_C_ALT5)
    HIGH(RTN_C_ALT5)
    LOW(RTN_D_ALT5)
    HIGH(RTN_D_ALT5)
    LOW(RTN_E_ALT6)
    HIGH(RTN_E_ALT6)
    LOW(RTN_F_ALT5)
    HIGH(RTN_F_ALT5)
    LOW(RTN_G_ALT5)
    HIGH(RTN_G_ALT5)
    LOW(RTN_H_ALT5)
    HIGH(RTN_H_ALT5)
    LOW(RTN_I_ALT5)
    HIGH(RTN_I_ALT5)
    LOW(RTN_J_ALT5)
    HIGH(RTN_J_ALT5)
    LOW(RTN_K_ALT5)
    HIGH(RTN_K_ALT5)
    LOW(RTN_L_ALT5)
    HIGH(RTN_L_ALT5)
    LOW(RTN_M_ALT5)
    HIGH(RTN_M_ALT5)
    LOW(17:1188)
    HIGH(17:1188)
    LOW(17:1194)
    HIGH(17:1194)
RTN_A_ALT5: ; 17:0F7A, 0x02EF7A
    .db 60
RTN_J: ; 17:0F7B, 0x02EF7B
    LDA FPTR_UNK_BANK_17_PTR+1
    PHA
    LDA FPTR_UNK_BANK_17_PTR[2]
    PHA
    JSR $AFD3
    JSR $AD9C
    PLA
    STA FPTR_UNK_BANK_17_PTR[2]
    PLA
    STA FPTR_UNK_BANK_17_PTR+1
    LDA #$03
    JMP $AFCD
RTN_K: ; 17:0F92, 0x02EF92
    JSR $AFD3
    JMP $AD9C
RTN_L: ; 17:0F98, 0x02EF98
    LDY #$00
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    AND #$0F
    TAX
    LDA #$01
    JSR $AFE1
    TXA
    PHA
    LDA FPTR_UNK_BANK_17_PTR+1
    PHA
    LDA FPTR_UNK_BANK_17_PTR[2]
    PHA
    JSR $AD9C
    LDA FPTR_UNK_BANK_17_PTR[2]
    STA BCD/MODULO/DIGITS_USE_A
    LDA FPTR_UNK_BANK_17_PTR+1
    STA BCD/MODULO/DIGITS_USE_B
    PLA
    STA FPTR_UNK_BANK_17_PTR[2]
    PLA
    STA FPTR_UNK_BANK_17_PTR+1
    PLA
    TAX
    DEX
    BNE 17:0FA4
    LDA BCD/MODULO/DIGITS_USE_A
    STA FPTR_UNK_BANK_17_PTR[2]
    LDA BCD/MODULO/DIGITS_USE_B
    STA FPTR_UNK_BANK_17_PTR+1
    JMP $AD9C
    JSR $AFE1
    JMP $AD9C
    LDY #$01
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    PHA
    INY
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    STA FPTR_UNK_BANK_17_PTR+1
    PLA
    STA FPTR_UNK_BANK_17_PTR[2]
    RTS
ADVANCE_FPTR_UNK_0x1: ; 17:0FE1, 0x02EFE1
    CLC
    ADC FPTR_UNK_BANK_17_PTR[2]
    STA FPTR_UNK_BANK_17_PTR[2]
    LDA #$00
    ADC FPTR_UNK_BANK_17_PTR+1
    STA FPTR_UNK_BANK_17_PTR+1
    RTS
RTN_B_ALT: ; 17:0FED, 0x02EFED
    LDY SCRIPT_INDEX_53_UNK
    JMP $B513
RTN_C_ALT: ; 17:0FF2, 0x02EFF2
    LDY R_**:$0054
    BPL 17:0FF9
    JMP $B555
    LDA #$01
    STA STREAM_REPLACE_COUNT?
    RTS
RTN_D_ALT: ; 17:0FFE, 0x02EFFE
    LDY R_**:$0054
    BPL 17:1005
    JMP $B5D3
    JMP $B6B2
RTN_E_ALT: ; 17:1008, 0x02F008
    LDY R_**:$0054
    BPL 17:100F
    JMP $B67C
    JMP $B6F1
RTN_F_ALT: ; 17:1012, 0x02F012
    LDA #$2D
    JSR $A3F8
    JSR $B069
    BCS 17:1021
    LDA #$40
    JSR $A3F8
    RTS
RTN_G_ALT: ; 17:1022, 0x02F022
    LDA #$2E
    JSR $A3F8
    JSR $B069
    BCS 17:1031
    LDA #$41
    JSR $A3F8
    RTS
RTN_H_ALT: ; 17:1032, 0x02F032
    LDA #$02
    STA STREAM_REPLACE_COUNT?
    RTS
RTN_I_ALT: ; 17:1037, 0x02F037
    LDY R_**:$0054
    BPL 17:103E
    JMP $B5DA
    JMP $B6BB
RTN_J_ALT: ; 17:1041, 0x02F041
    LDY R_**:$0054
    BPL 17:1048
    JMP $B5E1
    JMP $B6C4
RTN_K_ALT: ; 17:104B, 0x02F04B
    LDY R_**:$0054
    BPL 17:1052
    JMP $B5E8
    JMP $B6CD
RTN_L_ALT: ; 17:1055, 0x02F055
    LDY R_**:$0054
    BPL 17:105C
    JMP $B5EF
    JMP $B6D6
RTN_M_ALT: ; 17:105F, 0x02F05F
    LDY R_**:$0054
    BPL 17:1066
    JMP $B5F6
    JMP $B6DF
    LDY #$80
    CPY SCRIPT_INDEX_53_UNK
    BEQ 17:1076
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$01
    BNE 17:107F
    TYA
    CLC
    ADC #$20
    TAY
    BNE 17:106B
    CLC
    RTS
    STY R_**:$0054
    JSR $B513
    LDY R_**:$0054
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$FE
    STA STREAM_PTRS_ARR_UNK+6,Y
    LDA #$00
    STA STREAM_PTRS_ARR_UNK+5,Y
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    LDY R_**:$0054
    STA STREAM_INDEXES_ARR_UNK[24],Y
    LDA #$42
    JSR $A3F8
    SEC
    RTS
    LDA #$19
    LDX #$FB
    LDY #$A7
    JSR ENGINE_SCRIPT_LAUNCH_R7_A_PTR_XY_WITH_RESTORE
    JMP 1F:15E5
RTN_B_ALT5: ; 17:10B0, 0x02F0B0
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:10CA
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    BMI 17:10CA
RTN_H_ALT5: ; 17:10BC, 0x02F0BC
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:10CA
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    BMI 17:10CA
    CLC
    RTS
    SEC
    RTS
RTN_C_ALT5: ; 17:10CC, 0x02F0CC
    LDA FLAG_UNK_23
    BNE 17:10F3
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$70
    BNE 17:10F3
    LDA STREAM_PTRS_ARR_UNK+6,Y
    BMI 17:10F3
    LDA STREAM_INDEXES_ARR_UNK+11,Y
    STA BCD/MODULO/DIGITS_USE_A
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK+11,Y
    STA BCD/MODULO/DIGITS_USE_C
    JSR $B1A2
    LDA BCD/MODULO/DIGITS_USE_A
    CMP BCD/MODULO/DIGITS_USE_C
    BCS 17:10F5
    CLC
    RTS
    SEC
    RTS
RTN_D_ALT5: ; 17:10F7, 0x02F0F7
    JSR $BFE2
    BCS 17:1111
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK+11,Y
    STA BCD/MODULO/DIGITS_USE_A
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+11,Y
    STA BCD/MODULO/DIGITS_USE_C
    JSR $B1A2
    LDA BCD/MODULO/DIGITS_USE_C
    CMP BCD/MODULO/DIGITS_USE_A
    RTS
RTN_E_ALT6: ; 17:1112, 0x02F112
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$80
    EOR #$80
    ROL A
    BCS 17:1124
    JSR RANDOMIZE_GROUP_0x26
    AND #$80
    ROL A
    RTS
RTN_F_ALT5: ; 17:1125, 0x02F125
    LDA SCRIPT_INDEX_53_UNK
    BMI 17:112F
    LDA FLAG_UNK_23
    BEQ 17:112F
    CLC
    RTS
    SEC
    RTS
RTN_G_ALT5: ; 17:1131, 0x02F131
    LDY R_**:$0054
    BMI 17:114C
    LDA STREAM_PTRS_ARR_UNK[48],Y
    STA BCD/MODULO/DIGITS_USE_A
    LDA STREAM_PTRS_ARR_UNK+1,Y
    STA BCD/MODULO/DIGITS_USE_B
    LDY #$20
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    CMP #$68
    BEQ 17:114E
    INY
    CPY #$28
    BNE 17:1141
    SEC
    RTS
    CLC
    RTS
RTN_I_ALT5: ; 17:1150, 0x02F150
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+2,Y
    AND #$80
    BNE 17:1160
    LDA STREAM_INDEXES_ARR_UNK+2,Y
    AND #$01
    BNE 17:1162
    SEC
    RTS
    CLC
    RTS
RTN_J_ALT5: ; 17:1164, 0x02F164
    JSR RANDOMIZE_GROUP_0x26
    ASL A
    RTS
RTN_K_ALT5: ; 17:1169, 0x02F169
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+2,Y
    AND #$80
    EOR #$80
    ROL A
    RTS
RTN_L_ALT5: ; 17:1174, 0x02F174
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+2,Y
    AND #$04
    EOR #$04
    CMP #$01
    RTS
RTN_M_ALT5: ; 17:1180, 0x02F180
    LDA MAIN_FLAG_UNK
    BNE 17:1186
    SEC
    RTS
    CLC
    RTS
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    AND #$06
    EOR #$06
    CMP #$01
    RTS
    LDA 56_THING_NAME_SIZE
    CMP #$05
    BEQ 17:11A0
    CMP #$06
    BEQ 17:11A0
    SEC
    RTS
    CLC
    RTS
    LDA #$01
    STA BCD/MODULO/DIGITS_USE_B
    SEC
    LDA BCD/MODULO/DIGITS_USE_A
    SBC BCD/MODULO/DIGITS_USE_C
    STA BCD/MODULO/DIGITS_USE_A
    LDA BCD/MODULO/DIGITS_USE_B
    SBC #$00
    LSR A
    ROR BCD/MODULO/DIGITS_USE_A
    SEC
    LDA BCD/MODULO/DIGITS_USE_A
    SBC #$66
    BCS 17:11BD
    LDA #$00
    STA BCD/MODULO/DIGITS_USE_A
    JSR RANDOMIZE_GROUP_0x26
    STA BCD/MODULO/DIGITS_USE_C
    RTS
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$40
    EOR #$40
    CMP #$01
    RTS
    LDY SCRIPT_INDEX_53_UNK
    SEC
    LDA STREAM_INDEXES_ARR_UNK+5,Y
    SBC SUB/MOD_VAL_UNK_WORD[2]
    LDA STREAM_INDEXES_ARR_UNK+6,Y
    SBC SUB/MOD_VAL_UNK_WORD+1
    RTS
RTN_B_ALT2: ; 17:11DF, 0x02F1DF
    RTS
RTN_C_ALT2: ; 17:11E0, 0x02F1E0
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$08
    BNE 17:11EF
    LDA STREAM_PTRS_ARR_UNK+4,Y
    STA R_**:$0054
    RTS
    JSR RANDOMIZE_GROUP_0x26
    AND #$E0
    TAY
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:11EF
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    BMI 17:11EF
    STY R_**:$0054
    RTS
RTN_D_ALT2: ; 17:1202, 0x02F202
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$08
    BEQ 17:1212
    JSR RANDOMIZE_GROUP_0x26
    AND #$80
    BNE 17:122D
    LDX #$80
    LDA SCRIPT_INDEX_53_UNK
    BPL 17:121A
    LDX #$00
    STX R_**:$0054
    RTS
RTN_E_ALT2: ; 17:121D, 0x02F21D
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$08
    BEQ 17:122D
    JSR RANDOMIZE_GROUP_0x26
    AND #$80
    BNE 17:1212
    LDX #$00
    LDY SCRIPT_INDEX_53_UNK
    BPL 17:1235
    LDX #$80
    STX R_**:$0054
    RTS
RTN_F_ALT2: ; 17:1238, 0x02F238
    LDA SCRIPT_INDEX_53_UNK
    STA R_**:$0054
    RTS
RTN_G_ALT2: ; 17:123D, 0x02F23D
    LDX #$00
    LDY SCRIPT_INDEX_53_UNK
    BPL 17:1245
    LDX #$80
    STX R_**:$0054
    RTS
RTN_G_ALT2: ; 17:1248, 0x02F248
    CLC
    LDA R_**:$0054
    ADC #$20
    STA R_**:$0054
    RTS
RTN_B_ALT3: ; 17:1250, 0x02F250
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+9,Y
    STA SAVE_GAME_MOD_PAGE_PTR[2]
    LDA STREAM_INDEXES_ARR_UNK+10,Y
    STA SAVE_GAME_MOD_PAGE_PTR+1
    SEC
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK+7,Y
    STA ALT_STUFF_COUNT?
    STA RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY[8]
    SBC SAVE_GAME_MOD_PAGE_PTR[2]
    LDA STREAM_INDEXES_ARR_UNK+8,Y
    STA ALT_COUNT_UNK
    STA RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY+1
    SBC SAVE_GAME_MOD_PAGE_PTR+1
    BCC 17:12A8
    LSR SAVE_GAME_MOD_PAGE_PTR+1
    ROR SAVE_GAME_MOD_PAGE_PTR[2]
    SEC
    LDA ALT_STUFF_COUNT?
    SBC SAVE_GAME_MOD_PAGE_PTR[2]
    STA BCD/MODULO/DIGITS_USE_A
    LDA ALT_COUNT_UNK
    SBC SAVE_GAME_MOD_PAGE_PTR+1
    STA BCD/MODULO/DIGITS_USE_B
    LDA 56_THING_NAME_SIZE
    CMP #$01
    BNE 17:1297
    JSR RANDOMIZE_GROUP_0x26
    AND #$07
    ORA #$04
    STA BCD/MODULO/DIGITS_USE_A
    LDA #$00
    STA BCD/MODULO/DIGITS_USE_B
    LDA BCD/MODULO/DIGITS_USE_A
    ORA BCD/MODULO/DIGITS_USE_B
    BNE 17:129F
    INC BCD/MODULO/DIGITS_USE_A
    LDA BCD/MODULO/DIGITS_USE_A
    STA SUB/MOD_VAL_UNK_WORD[2]
    LDA BCD/MODULO/DIGITS_USE_B
    STA SUB/MOD_VAL_UNK_WORD+1
    RTS
    ASL ALT_STUFF_COUNT?
    ROL ALT_COUNT_UNK
    CLC
    LDA ALT_STUFF_COUNT?
    ADC RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY[8]
    STA ALT_STUFF_COUNT?
    LDA ALT_COUNT_UNK
    ADC RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY+1
    STA ALT_COUNT_UNK
    SEC
    LDA ALT_STUFF_COUNT?
    SBC SAVE_GAME_MOD_PAGE_PTR[2]
    STA BCD/MODULO/DIGITS_USE_A
    LDA ALT_COUNT_UNK
    SBC SAVE_GAME_MOD_PAGE_PTR+1
    STA BCD/MODULO/DIGITS_USE_B
    BCS 17:12CE
    LDA #$00
    STA BCD/MODULO/DIGITS_USE_A
    STA BCD/MODULO/DIGITS_USE_B
    LSR BCD/MODULO/DIGITS_USE_B
    ROR BCD/MODULO/DIGITS_USE_A
    LSR BCD/MODULO/DIGITS_USE_B
    ROR BCD/MODULO/DIGITS_USE_A
    JMP $B284
RTN_C_ALT3: ; 17:12D9, 0x02F2D9
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK+7,Y
    STA SUB/MOD_VAL_UNK_WORD[2]
    LDA STREAM_INDEXES_ARR_UNK+8,Y
    STA SUB/MOD_VAL_UNK_WORD+1
    LDA 56_THING_NAME_SIZE
    CMP #$01
    BNE 17:12F8
    JSR RANDOMIZE_GROUP_0x26
    AND #$0F
    ORA #$08
    STA SUB/MOD_VAL_UNK_WORD[2]
    LDA #$00
    STA SUB/MOD_VAL_UNK_WORD+1
    RTS
RTN_D_ALT3: ; 17:12F9, 0x02F2F9
    LDA SAVE_GAME_MOD_PAGE_PTR[2]
    STA SUB/MOD_VAL_UNK_WORD[2]
    LDA #$00
    STA SUB/MOD_VAL_UNK_WORD+1
    RTS
RTN_E_ALT3: ; 17:1302, 0x02F302
    LDA 56_THING_NAME_SIZE
    CMP #$05
    BNE 17:1318
    LDA 57_INDEX_UNK
    JSR $A3F8
    LDX 57_INDEX_UNK
    INX
    CPX #$9E
    BNE 17:1316
    INC 56_THING_NAME_SIZE
    STX 57_INDEX_UNK
    RTS
RTN_F_ALT3: ; 17:1319, 0x02F319
    LDA **:$0057
    ORA SAVE_GAME_MOD_PAGE_PTR[2]
    STA **:$0057
    RTS
RTN_G_ALT3: ; 17:1320, 0x02F320
    LDA #$6A
    JSR $A3F8
    LDA 56_THING_NAME_SIZE
    CMP #$02
    BNE 17:1330
    LDA #$95
    JMP $A3F8
    CMP #$03
    BNE 17:1339
    LDA #$94
    JMP $A3F8
    CMP #$04
    BNE 17:1342
    LDA #$93
    JMP $A3F8
    CMP #$05
    BNE 17:134B
    LDA #$01
    JMP $A3F8
    CMP #$06
    BNE 17:1354
    LDA #$01
    JMP $A3F8
    LDY R_**:$0054
    BMI 17:135D
    LDA #$90
    JMP $A3F8
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+7,Y
    STA **:$0590
    LDA STREAM_INDEXES_ARR_UNK+8,Y
    STA **:$0591
    LDA STREAM_INDEXES_ARR_UNK+9,Y
    STA **:$0592
    LDA STREAM_INDEXES_ARR_UNK+10,Y
    STA **:$0593
    LDA #$24
    JSR $A3F8
    LDA #$25
    JSR $A3F8
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+2,Y
    PHA
    AND #$40
    BEQ 17:1390
    LDA #$6B
    JSR $A3F8
    PLA
    PHA
    AND #$20
    BEQ 17:139B
    LDA #$6C
    JSR $A3F8
    PLA
    PHA
    AND #$10
    BEQ 17:13A6
    LDA #$6D
    JSR $A3F8
    PLA
    PHA
    AND #$80
    BNE 17:13B7
    PLA
    PHA
    AND #$01
    BEQ 17:13B7
    LDA #$6F
    JSR $A3F8
    PLA
    LDA #$FF
    JMP $A3F8
    LDA #$90
    JMP $A3F8
RTN_H_ALT3: ; 17:13C2, 0x02F3C2
    LDX #$0F
    LDA SCRIPT_INDEX_53_UNK
    BMI 17:13CA
    LDX #$01
    TXA
    JMP LIB_DIRECT_ENTRY_TOSOLVE
RTN_I_ALT3: ; 17:13CE, 0x02F3CE
    LDA SAVE_GAME_MOD_PAGE_PTR[2]
    STA R_**:$0058
    RTS
RTN_J_ALT3: ; 17:13D3, 0x02F3D3
    LDA SAVE_GAME_MOD_PAGE_PTR[2]
    JMP $A3F8
RTN_K_ALT3: ; 17:13D8, 0x02F3D8
    LDA SAVE_GAME_MOD_PAGE_PTR[2]
    JMP LIB_DIRECT_ENTRY_TOSOLVE
    TYA
    BMI 17:13F0
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    CMP #$06
    BNE 17:13F0
    LDA #$00
    STA 56_THING_NAME_SIZE
    LDX #$88
    JMP $B40B
    JSR $B4CA
    CMP #$01
    BNE 17:13FC
    LDX #$19
    JMP $B40B
    CMP #$02
    BNE 17:1405
    LDX #$1A
    JMP $B40B
    JSR $B42D
    JMP $B496
    LDA R_**:$0054
    PHA
    LDA SCRIPT_INDEX_53_UNK
    PHA
    LDA FPTR_UNK_BANK_17_PTR+1
    PHA
    LDA FPTR_UNK_BANK_17_PTR[2]
    PHA
    STY SCRIPT_INDEX_53_UNK
    TXA
    JSR $AD7B
    PLA
    STA FPTR_UNK_BANK_17_PTR[2]
    PLA
    STA FPTR_UNK_BANK_17_PTR+1
    PLA
    STA SCRIPT_INDEX_53_UNK
    PLA
    STA R_**:$0054
    TAY
    JMP $B496
    TYA
    PHA
    LDA #$00
    STA STREAM_INDEXES_ARR_UNK+3,Y
    STA STREAM_INDEXES_ARR_UNK+4,Y
    LDA #$80
    STA STREAM_INDEXES_ARR_UNK+1,Y
    TYA
    BPL 17:148B
    LDA #$00
    STA STREAM_INDEXES_ARR_UNK[24],Y
    LDA STREAM_PTRS_ARR_UNK[48],Y
    STA BCD/MODULO/DIGITS_USE_A
    LDA STREAM_PTRS_ARR_UNK+1,Y
    STA BCD/MODULO/DIGITS_USE_B
    TYA
    PHA
    CLC
    LDY #$1A
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    ADC TRIO_FILE_OFFSET_UNK[3]
    STA TRIO_FILE_OFFSET_UNK[3]
    INY
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    ADC TRIO_FILE_OFFSET_UNK+1
    STA TRIO_FILE_OFFSET_UNK+1
    LDA #$00
    ADC TRIO_FILE_OFFSET_UNK+2
    STA TRIO_FILE_OFFSET_UNK+2
    CLC
    LDY #$1C
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    ADC R_**:$004C
    STA R_**:$004C
    INY
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    ADC R_**:$004D
    STA R_**:$004D
    LDY #$1E
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    BEQ 17:147E
    STA SCRIPT_ENCOUNTER_ID?(SAID_SONG_ID???)
    LDA #$06
    STA SOUND_EFFECT_REQUEST_ARRAY[5]
    PLA
    TAY
    JSR $B555
    JMP $B490
    LDA #$15
    JSR LIB_DIRECT_ENTRY_TOSOLVE
    JSR 1F:15E5
    PLA
    TAY
    RTS
    TYA
    PHA
    BMI 17:14A9
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    CMP #$06
    BEQ 17:14C7
    LDA #$10
    JSR $A3F8
    JMP $B4C7
    LDA 56_THING_NAME_SIZE
    CMP #$06
    BEQ 17:14C7
    LDA STREAM_PTRS_ARR_UNK[48],Y
    STA BCD/MODULO/DIGITS_USE_A
    LDA STREAM_PTRS_ARR_UNK+1,Y
    STA BCD/MODULO/DIGITS_USE_B
    LDY #$0A
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    AND #$1C
    LSR A
    LSR A
    CLC
    ADC #$79
    JSR $A3F8
    PLA
    TAY
    RTS
    TYA
    PHA
    LDA STREAM_PTRS_ARR_UNK[48],Y
    STA BCD/MODULO/DIGITS_USE_A
    LDA STREAM_PTRS_ARR_UNK+1,Y
    STA BCD/MODULO/DIGITS_USE_B
    LDY #$08
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    AND #$1C
    LSR A
    LSR A
    STA BCD/MODULO/DIGITS_USE_A
    PLA
    TAY
    LDA BCD/MODULO/DIGITS_USE_A
    RTS
    LDY SCRIPT_INDEX_53_UNK
    CLC
    LDA STREAM_PTRS_ARR_UNK[48],Y
    ADC #$20
    STA BCD/MODULO/DIGITS_USE_A
    LDA STREAM_PTRS_ARR_UNK+1,Y
    ADC #$00
    STA BCD/MODULO/DIGITS_USE_B
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK+16,Y
    TAY
    JSR ENGINE_WRAM_STATE_WRITEABLE
    CPY #$07
    BEQ 17:150C
    INY
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    DEY
    STA [BCD/MODULO/DIGITS_USE_A],Y
    INY
    BNE 17:14FF
    LDA #$00
    STA [BCD/MODULO/DIGITS_USE_A],Y
    JMP ENGINE_WRAM_STATE_WRITE_DISABLED
    JSR $B5BC
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$7F
    STA STREAM_INDEXES_ARR_UNK+1,Y
    LDA #$22
    STA BCD/MODULO/DIGITS_USE_A
    LDA #$FF
    STA BCD/MODULO/DIGITS_USE_B
    LDA #$FF
    STA BCD/MODULO/DIGITS_USE_C
    JSR $B589
    LDA #$00
    STA ENGINE_FLAG_LATCHY_GFX_FLAGS
    TYA
    PHA
    LDA STREAM_PTRS_ARR_UNK+2,Y
    AND #$03
    TAX
    LDY #$1F
    LDA [FPTR_5C_UNK[2]],Y
    STA GFX_BANKS_EXTENSION[4],X
    PLA
    TAY
    LDA STREAM_PTRS_ARR_UNK+4,Y
    LDX SAVE_GAME_MOD_PAGE_PTR+1
    STA OBJ?_BYTE_0x0_STATUS?,X
    LDA #$01
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO
    JSR ENGINE_NMI_0x01_SET/WAIT
    LDA #$80
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO
    RTS
    JSR $B5BC
    LDA #$00
    LDX SAVE_GAME_MOD_PAGE_PTR+1
    STA OBJ?_BYTE_0x0_STATUS?,X
    LDA #$01
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO
    JSR ENGINE_NMI_0x01_SET/WAIT
    LDA #$80
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO
    LDA #$00
    STA STREAM_INDEXES_ARR_UNK[24],Y
    LDA #$00
    STA BCD/MODULO/DIGITS_USE_A
    LDA #$23
    STA BCD/MODULO/DIGITS_USE_B
    LDA #$01
    STA BCD/MODULO/DIGITS_USE_C
    JSR $B589
    LDA STREAM_PTRS_ARR_UNK+2,Y
    AND #$03
    TAX
    LDA #$7C
    STA GFX_BANKS_EXTENSION[4],X
    RTS
    TYA
    PHA
    LDA STREAM_PTRS_ARR_UNK+2,Y
    AND #$03
    TAX
    LDY #$1F
    LDA [FPTR_5C_UNK[2]],Y
    ORA #$80
    STA GFX_BANKS_EXTENSION[4],X
    PLA
    TAY
    LDA #$80
    STA ENGINE_FLAG_LATCHY_GFX_FLAGS
    LDA BCD/MODULO/DIGITS_USE_A
    STA SCRIPT_REPLACE_LATCH_MOD_VAL?
    AND #$01
    BNE 17:15AD
    LDA ENGINE_FLAG_LATCHY_GFX_FLAGS
    EOR #$40
    STA ENGINE_FLAG_LATCHY_GFX_FLAGS
    JSR ENGINE_NMI_0x01_SET/WAIT
    CLC
    LDA BCD/MODULO/DIGITS_USE_A
    ADC BCD/MODULO/DIGITS_USE_C
    STA BCD/MODULO/DIGITS_USE_A
    CMP BCD/MODULO/DIGITS_USE_B
    BNE 17:159F
    RTS
    LDA STREAM_PTRS_ARR_UNK[48],Y
    STA FPTR_5C_UNK[2]
    LDA STREAM_PTRS_ARR_UNK+1,Y
    STA FPTR_5C_UNK+1
    LDA STREAM_PTRS_ARR_UNK+2,Y
    AND #$03
    STA SAVE_GAME_MOD_PAGE_PTR[2]
    ASL A
    ASL A
    ASL A
    STA SAVE_GAME_MOD_PAGE_PTR+1
    RTS
    LDA #$0F
    LDX #$03
    JMP $B626
    LDA #$16
    LDX #$03
    JMP $B626
    LDA #$12
    LDX #$03
    JMP $B626
    LDA #$31
    LDX #$03
    JMP $B626
    LDA #$28
    LDX #$03
    JMP $B626
    LDA #$2A
    LDX #$03
    JMP $B626
    LDX #$03
    TXA
    PHA
    LDA #$05
    STA SOUND_EFFECT_REQUEST_ARRAY[5]
    JSR RANDOMIZE_GROUP_0x26
    AND #$03
    TAX
    INX
    TXA
    PHA
    LDA #$01
    STA SOUND_EFFECT_REQUEST_ARRAY[5]
    PLA
    PHA
    LDX #$03
    JSR $B626
    PLA
    TAX
    DEX
    BNE 17:160D
    PLA
    TAX
    DEX
    BNE 17:15FF
    RTS
    STA BCD/MODULO/DIGITS_USE_B
    STX BCD/MODULO/DIGITS_USE_A
    LDA #$02
    JSR LIB_DIRECT_ENTRY_TOSOLVE
    LDY R_**:$0054
    JSR $B5BC
    JSR ENGINE_SETTLE_ALL_UPDATES?
    LDX BCD/MODULO/DIGITS_USE_A
    TXA
    PHA
    LDX SAVE_GAME_MOD_PAGE_PTR+1
    LDA OBJ?_BYTE_0x0_STATUS?,X
    PHA
    LDA #$00
    STA OBJ?_BYTE_0x0_STATUS?,X
    LDA #$01
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO
    JSR ENGINE_NMI_0x01_SET/WAIT
    LDA #$7C
    LDX SAVE_GAME_MOD_PAGE_PTR[2]
    STA GFX_BANKS_EXTENSION[4],X
    LDA BCD/MODULO/DIGITS_USE_B
    JSR PALETTE_MOD_BG_COLOR_TO_A
    JSR ENGINE_NMI_0x01_SET/WAIT
    PLA
    LDX SAVE_GAME_MOD_PAGE_PTR+1
    STA OBJ?_BYTE_0x0_STATUS?,X
    LDA #$01
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO
    JSR ENGINE_NMI_0x01_SET/WAIT
    LDY #$1F
    LDA [FPTR_5C_UNK[2]],Y
    LDX SAVE_GAME_MOD_PAGE_PTR[2]
    STA GFX_BANKS_EXTENSION[4],X
    JSR PALETTE_MOD_TO_BLACK
    JSR ENGINE_NMI_0x01_SET/WAIT
    PLA
    TAX
    DEX
    BNE 17:1639
    RTS
    LDA #$02
    JSR LIB_DIRECT_ENTRY_TOSOLVE
    JSR $B5BC
    LDY R_**:$0054
    LDA STREAM_PTRS_ARR_UNK+4,Y
    PHA
    LDX SAVE_GAME_MOD_PAGE_PTR+1
    LDA OBJ?_BYTE_0x0_STATUS?,X
    LDY R_**:$0054
    STA STREAM_PTRS_ARR_UNK+4,Y
    LDA #$00
    LDX SAVE_GAME_MOD_PAGE_PTR+1
    STA OBJ?_BYTE_0x0_STATUS?,X
    LDA #$01
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO
    JSR ENGINE_NMI_0x01_SET/WAIT
    LDA #$80
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO
    LDY R_**:$0054
    JSR $B513
    PLA
    LDY R_**:$0054
    STA STREAM_PTRS_ARR_UNK+4,Y
    RTS
    LDX #$41
    LDY #$9F
    LDA #$0F
    JMP 17:16FA
    LDX #$41
    LDY #$9F
    LDA #$16
    JMP 17:16FA
    LDX #$41
    LDY #$9F
    LDA #$12
    JMP 17:16FA
    LDX #$41
    LDY #$9F
    LDA #$31
    JMP 17:16FA
    LDX #$41
    LDY #$9F
    LDA #$28
    JMP 17:16FA
    LDX #$61
    LDY #$9F
    LDA #$2A
    JMP 17:16FA
    LDX #$61
    LDY #$9F
    LDA #$0F
    JMP 17:16FA
    LDX #$4B
    LDY #$9F
    LDA #$0F
    JMP 17:16FA
    STA SAVE_GAME_MOD_PAGE_PTR[2]
    STX BCD/MODULO/DIGITS_USE_A
    STY BCD/MODULO/DIGITS_USE_B
    LDA #$10
    JSR LIB_DIRECT_ENTRY_TOSOLVE
    JSR ENGINE_SETTLE_ALL_UPDATES?
    LDY #$00
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    STA BCD/MODULO/DIGITS_USE_C
    INY
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    STA BCD/MODULO/DIGITS_USE_D
    CLC
    LDA BCD/MODULO/DIGITS_USE_A
    ADC #$02
    STA BCD/MODULO/DIGITS_USE_A
    LDA BCD/MODULO/DIGITS_USE_B
    ADC #$00
    STA BCD/MODULO/DIGITS_USE_B
    LDY #$00
    TYA
    PHA
    AND #$02
    BEQ 17:1730
    LDA SAVE_GAME_MOD_PAGE_PTR[2]
    JSR PALETTE_MOD_BG_COLOR_TO_A
    JMP 17:1733
    JSR PALETTE_MOD_TO_BLACK
    PLA
    TAY
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    STA NMI_FP_UNK+1
    INY
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    STA NMI_FP_UNK[2]
    INY
    LDA #$01
    STA NMI_FLAG_EXECUTE_UPDATE_BUF_AND_MORE_TODO
    JSR ENGINE_NMI_0x01_SET/WAIT
    CPY BCD/MODULO/DIGITS_USE_D
    BNE 17:1722
    DEC BCD/MODULO/DIGITS_USE_C
    BNE 17:1720
    LDA #$00
    STA NMI_FP_UNK[2]
    STA NMI_FP_UNK+1
    JSR ENGINE_NMI_0x01_SET/WAIT
    JMP PALETTE_MOD_TO_BLACK
SUB_UNK: ; 17:175A, 0x02F75A
    LDA STREAM_REPLACE_COUNT?
    CMP #$01
    BEQ EXIT_CS
    CMP #$02
    BEQ EXIT_CS
    LDY #$00
    LDA STREAM_INDEXES_ARR_UNK[24],Y
    BEQ 17:177B
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    AND #$06
    EOR #$06
    BEQ 17:177B
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$E0
    BEQ 17:17B2
    TYA
    CLC
    ADC #$20
    TAY
    BPL 17:1766
    LDA #$80
    STA STREAM_INDEXES_ARR_UNK+1
    STA STREAM_PTRS_ARR_UNK+9
    STA STREAM_PTRS_ARR_UNK+41
    STA **:$0661
    LDA 56_THING_NAME_SIZE
    CMP #$04
    BNE 17:17A7
    LDA #$03
    STA STREAM_REPLACE_COUNT?
    LDA #$04
    JSR LIB_DIRECT_ENTRY_TOSOLVE
    LDA #$8F
    JSR LIB_EXIT_IDFK
    JMP EXIT_CS ; Goto, RTS CS.
    LDA #$00
    STA SCRIPT_INDEX_53_UNK
    LDA #$0E
    JSR LIB_EXIT_IDFK
EXIT_CS: ; 17:17B0, 0x02F7B0
    SEC
    RTS
    LDA **:$0680
    ORA **:$06A0
    ORA **:$06C0
    ORA **:$06E0
    BNE 17:17F3
    LDA FLAG_UNK_23
    BEQ 17:17C9
    LDA #$31
    JSR $A3F8
    LDA 56_THING_NAME_SIZE
    CMP #$06
    BNE 17:17E7
    LDA #$00
    STA R_**:$0054
    JSR $B8D4
    LDA #$20
    STA R_**:$0054
    JSR $B8D4
    LDA #$40
    STA R_**:$0054
    JSR $B8D4
    JMP $B7F1
    LDA #$05
    JSR SOUND_LIB_SET_NEW_SONG_ID
    LDA #$0D
    JSR $A3F8
    SEC
    RTS
    LDA 56_THING_NAME_SIZE
    CMP #$01
    BNE 17:1802
    LDY #$00
    JSR ROUTINE_OBJ_HANDLE_UNK_A
    BCS 17:1802
    SEC
    RTS
    CLC
    RTS
RTN_E: ; 17:1804, 0x02F804
    LDY #$01
    LDA [FPTR_UNK_BANK_17_PTR[2]],Y
    JSR SWITCH_TABLE_PAST_JSR_INDIRECT
    LOW(RTN_A)
    HIGH(RTN_A)
    LOW(RTN_B)
    HIGH(RTN_B)
    LOW(RTN_C)
    HIGH(RTN_C)
    LOW(RTN_D)
    HIGH(RTN_D)
    LOW(RTN_E)
    HIGH(RTN_E)
    LOW(RTN_F)
    HIGH(RTN_F)
    LOW(RTN_G)
    HIGH(RTN_G)
    LOW(RTN_H)
    HIGH(RTN_H)
    LOW(RTN_I)
    HIGH(RTN_I)
    LOW(RTN_J)
    HIGH(RTN_J)
    LOW(RTN_K)
    HIGH(RTN_K)
    LOW(RTN_L)
    HIGH(RTN_L)
    LOW(RTN_M)
    HIGH(RTN_M)
    LOW(RTN_N)
    HIGH(RTN_N)
    LOW(RTN_O)
    HIGH(RTN_O)
    LOW(RTN_P)
    HIGH(RTN_P)
    LOW(RTN_Q)
    HIGH(RTN_Q)
    LOW(RTN_R)
    HIGH(RTN_R)
    LOW(RTN_S)
    HIGH(RTN_S)
    LOW(RTN_T)
    HIGH(RTN_T)
    LOW(RTN_U)
    HIGH(RTN_U)
    LOW(RTN_V)
    HIGH(RTN_V)
    LOW(RTN_W)
    HIGH(RTN_W)
    LOW(RTN_X)
    HIGH(RTN_X)
    LOW(RTN_Y)
    HIGH(RTN_Y)
    LOW(RTN_Z)
    HIGH(RTN_Z)
    LOW(RTN_AA)
    HIGH(RTN_AA)
    LOW(RTN_AB)
    HIGH(RTN_AB)
    LOW(RTN_AC)
    HIGH(RTN_AC)
    LOW(RTN_AD)
    HIGH(RTN_AD)
    LOW(RTN_AE)
    HIGH(RTN_AE)
    LOW(RTN_AF)
    HIGH(RTN_AF)
    LOW(RTN_AG)
    HIGH(RTN_AG)
    LOW(RTN_AH)
    HIGH(RTN_AH)
    LOW(RTN_AI)
    HIGH(RTN_AI)
    LOW(RTN_AJ)
    HIGH(RTN_AJ)
    LOW(RTN_AK)
    HIGH(RTN_AK)
    LOW(RTN_AL)
    HIGH(RTN_AL)
    LOW(RTN_AM)
    HIGH(RTN_AM)
    LOW(RTN_AN)
    HIGH(RTN_AN)
    LOW(RTN_AO)
    HIGH(RTN_AO)
    LOW(RTN_AP)
    HIGH(RTN_AP)
    LOW(RTN_AQ)
    HIGH(RTN_AQ)
    LOW(RTN_AR)
    HIGH(RTN_AR)
RTN_A: ; 17:1863, 0x02F863
    LDA #$02
    JMP $AFCD
RTN_B: ; 17:1868, 0x02F868
    JSR $BDDD
    LDX R_**:$0054
    LDY #$03
    JSR $BEF2
    LDX #$0A
    LDA #$3E
    JMP $BD5B
RTN_C: ; 17:1879, 0x02F879
    JSR $BDDD
    LDX R_**:$0054
    LDY #$05
    JSR $BEF2
    LDX #$0A
    LDA #$3D
    JMP $BD5B
RTN_S: ; 17:188A, 0x02F88A
    JSR $BDDD
    LDX R_**:$0054
    LDY #$07
    JSR $BDE8
    LDA #$20
    JMP $A3F8
RTN_D: ; 17:1899, 0x02F899
    JSR $BDDD
    LDX R_**:$0054
    LDY #$0C
    JSR $BE3B
    LDX #$09
    LDA #$23
    JMP $BD5B
RTN_P: ; 17:18AA, 0x02F8AA
    LDY SCRIPT_INDEX_53_UNK
    JMP $B42D
RTN_E: ; 17:18AF, 0x02F8AF
    LDX R_**:$0054
    LDY #$07
    JSR $BF00
    LDX #$09
    LDA #$20
    JMP $BD5B
RTN_F: ; 17:18BD, 0x02F8BD
    LDX R_**:$0054
    LDY #$09
    JSR $BF00
    LDX #$09
    LDA #$22
    JMP $BD5B
RTN_G: ; 17:18CB, 0x02F8CB
    LDA #$FF
    STA SUB/MOD_VAL_UNK_WORD[2]
    STA SUB/MOD_VAL_UNK_WORD+1
    JMP $B86B
    LDA #$FF
    STA SUB/MOD_VAL_UNK_WORD[2]
    STA SUB/MOD_VAL_UNK_WORD+1
    LDA #$00
    LDX R_**:$0054
    STA STREAM_INDEXES_ARR_UNK+1,X
    LDY #$03
    JSR $BEF2
    LDX #$0A
    LDA #$00
    JSR $BD5B
    LDX #$14
    JMP ENGINE_WAIT_X_SETTLES
RTN_Q: ; 17:18F2, 0x02F8F2
    JSR $BDDD
    LDY SCRIPT_INDEX_53_UNK
    SEC
    LDA STREAM_INDEXES_ARR_UNK+3,Y
    SBC BCD/MODULO/DIGITS_USE_A
    STA STREAM_INDEXES_ARR_UNK+3,Y
    LDA STREAM_INDEXES_ARR_UNK+4,Y
    SBC BCD/MODULO/DIGITS_USE_B
    STA STREAM_INDEXES_ARR_UNK+4,Y
    BCC 17:1912
    ORA STREAM_INDEXES_ARR_UNK+3,Y
    BEQ 17:1912
    JMP 1F:15E5
    JMP $B3DD
RTN_H: ; 17:1915, 0x02F915
    LDA 56_THING_NAME_SIZE
    CMP #$05
    BEQ 17:193E
    CMP #$06
    BEQ 17:193E
    JSR $BFE2
    BCC 17:193E
    LDX #$03
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    CMP #$06
    BNE 17:1931
    LDX #$3F
    STX BCD/MODULO/DIGITS_USE_A
    JSR RANDOMIZE_GROUP_0x26
    AND BCD/MODULO/DIGITS_USE_A
    STA SUB/MOD_VAL_UNK_WORD[2]
    LDA #$00
    STA SUB/MOD_VAL_UNK_WORD+1
    LDA R_**:$0054
    PHA
    JSR $BDDD
    LDY R_**:$0054
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$04
    BEQ 17:1962
    LDA BCD/MODULO/DIGITS_USE_B
    PHA
    LDA BCD/MODULO/DIGITS_USE_A
    PHA
    LDA #$53
    JSR $A3F8
    PLA
    STA BCD/MODULO/DIGITS_USE_A
    PLA
    STA BCD/MODULO/DIGITS_USE_B
    LDY SCRIPT_INDEX_53_UNK
    STY R_**:$0054
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$10
    BEQ 17:196D
    LSR BCD/MODULO/DIGITS_USE_B
    ROR BCD/MODULO/DIGITS_USE_A
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$08
    BEQ 17:1978
    LSR BCD/MODULO/DIGITS_USE_B
    ROR BCD/MODULO/DIGITS_USE_A
    JSR $BF74
    LDA BCD/MODULO/DIGITS_USE_A
    ORA BCD/MODULO/DIGITS_USE_B
    BNE 17:1983
    INC BCD/MODULO/DIGITS_USE_A
    LDA BCD/MODULO/DIGITS_USE_A
    STA **:$0590
    PHA
    LDA BCD/MODULO/DIGITS_USE_B
    STA **:$0591
    PHA
    LDA #$0C
    JSR $A3F8
    PLA
    STA BCD/MODULO/DIGITS_USE_B
    PLA
    STA BCD/MODULO/DIGITS_USE_A
    LDA 56_THING_NAME_SIZE
    CMP #$03
    BEQ 17:19A5
    JSR $BFEF
    BCS 17:19C4
    JSR $BFE2
    BCS 17:19C4
    LDY R_**:$0054
    SEC
    LDA STREAM_INDEXES_ARR_UNK+3,Y
    SBC BCD/MODULO/DIGITS_USE_A
    STA STREAM_INDEXES_ARR_UNK+3,Y
    LDA STREAM_INDEXES_ARR_UNK+4,Y
    SBC BCD/MODULO/DIGITS_USE_B
    STA STREAM_INDEXES_ARR_UNK+4,Y
    BCC 17:1A00
    ORA STREAM_INDEXES_ARR_UNK+3,Y
    BEQ 17:1A00
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$0C
    BEQ 17:19DF
    JSR RANDOMIZE_GROUP_0x26
    AND #$C0
    BNE 17:19DF
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$F3
    STA STREAM_INDEXES_ARR_UNK+1,Y
    LDA #$8D
    JSR $A3F8
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$10
    BEQ 17:19FA
    JSR RANDOMIZE_GROUP_0x26
    AND #$C0
    BNE 17:19FA
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$EF
    STA STREAM_INDEXES_ARR_UNK+1,Y
    LDA #$61
    JSR $A3F8
    PLA
    STA R_**:$0054
    JMP 1F:15E5
    JSR $B3DD
    PLA
    STA R_**:$0054
    RTS
RTN_I: ; 17:1A07, 0x02FA07
    JSR $BDDD
    LDY R_**:$0054
    JSR $BF74
    LDX R_**:$0054
    LDY #$09
    JSR $BE72
    LDA #$27
    JMP $A3F8
RTN_J: ; 17:1A1B, 0x02FA1B
    JSR $BDDD
    LDX R_**:$0054
    LDY #$0B
    JSR $BEC4
    LDA #$26
    JMP $A3F8
RTN_K: ; 17:1A2A, 0x02FA2A
    JSR $BFE2
    BCS 17:1A39
    JSR $BFEF
    BCS 17:1A39
    LDY R_**:$0054
    JMP $B3DD
    JMP $B924
RTN_L: ; 17:1A3C, 0x02FA3C
    JSR $BFE2
    BCS 17:1A6B
    JSR $BFEF
    BCS 17:1A6B
    LDY R_**:$0054
    JSR RANDOMIZE_GROUP_0x26
    AND #$03
    TAX
    INX
    TXA
    SEC
    SBC STREAM_INDEXES_ARR_UNK+3,Y
    LDA #$00
    SBC STREAM_INDEXES_ARR_UNK+4,Y
    BCS 17:1A6B
    TXA
    STA STREAM_INDEXES_ARR_UNK+3,Y
    LDA #$00
    STA STREAM_INDEXES_ARR_UNK+4,Y
    LDX #$00
    LDA #$38
    JMP $BD5B
    JMP $BDD8
RTN_M: ; 17:1A6E, 0x02FA6E
    LDX R_**:$0054
    LDY #$07
    JSR $BF15
    LDA #$21
    JMP $A3F8
RTN_N: ; 17:1A7A, 0x02FA7A
    LDX R_**:$0054
    LDY #$09
    JSR $BF15
    LDA #$27
    JMP $A3F8
RTN_R: ; 17:1A86, 0x02FA86
    JSR $BDDD
    LDX SCRIPT_INDEX_53_UNK
    LDY #$07
    JSR $BDE8
    LDA #$5C
    JMP $A3F8
RTN_O: ; 17:1A95, 0x02FA95
    JSR $BDDD
    LDY R_**:$0054
    BMI 17:1ADD
    LDA STREAM_PTRS_ARR_UNK[48],Y
    STA BCD/MODULO/DIGITS_USE_C
    LDA STREAM_PTRS_ARR_UNK+1,Y
    STA BCD/MODULO/DIGITS_USE_D
    LDY #$11
    CLC
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    ADC BCD/MODULO/DIGITS_USE_A
    STA SAVE_GAME_MOD_PAGE_PTR[2]
    INY
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    ADC BCD/MODULO/DIGITS_USE_B
    STA SAVE_GAME_MOD_PAGE_PTR+1
    INY
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    ADC #$00
    STA ALT_STUFF_COUNT?
    BCC 17:1AC7
    LDA #$FF
    STA SAVE_GAME_MOD_PAGE_PTR[2]
    STA SAVE_GAME_MOD_PAGE_PTR+1
    STA ALT_STUFF_COUNT?
    JSR ENGINE_WRAM_STATE_WRITEABLE
    LDY #$11
    LDA SAVE_GAME_MOD_PAGE_PTR[2]
    STA [BCD/MODULO/DIGITS_USE_C],Y
    INY
    LDA SAVE_GAME_MOD_PAGE_PTR+1
    STA [BCD/MODULO/DIGITS_USE_C],Y
    INY
    LDA ALT_STUFF_COUNT?
    STA [BCD/MODULO/DIGITS_USE_C],Y
    JSR ENGINE_WRAM_STATE_WRITE_DISABLED
    LDX #$0A
    LDA #$2F
    JMP $BD5B
RTN_T: ; 17:1AE4, 0x02FAE4
    JSR $BFE2
    BCS 17:1AF7
    JSR $BF58
    BCS 17:1AF7
    LDA #$1B
    LDY #$00
    LDX #$80
    JMP $BD7F
    JMP $BDD8
RTN_U: ; 17:1AFA, 0x02FAFA
    JSR $BFE2
    BCS 17:1AF7
    JSR $BF58
    BCS 17:1AF7
    LDA #$4B
    LDY #$00
    LDX #$02
    JMP $BD69
RTN_V: ; 17:1B0D, 0x02FB0D
    JSR $BFE2
    BCS 17:1AF7
    JSR $BFEF
    BCS 17:1AF7
    JSR $BF66
    BCS 17:1AF7
    LDA #$39
    LDY #$00
    LDX #$08
    JMP $BD69
RTN_W: ; 17:1B25, 0x02FB25
    JSR $BFE2
    BCS 17:1AF7
    JSR $BFEF
    BCS 17:1AF7
    JSR $BF66
    BCS 17:1AF7
    LDA #$3B
    LDY #$00
    LDX #$10
    JMP $BD69
RTN_X: ; 17:1B3D, 0x02FB3D
    JSR $BFE2
    BCS 17:1AF7
    JSR $BFEF
    BCS 17:1AF7
    JSR $BF58
    BCS 17:1AF7
    LDA #$49
    LDY #$00
    LDX #$20
    JMP $BD69
RTN_Y: ; 17:1B55, 0x02FB55
    JSR $BFE2
    BCS 17:1AF7
    LDY R_**:$0054
    LDA STREAM_PTRS_ARR_UNK[48],Y
    STA BCD/MODULO/DIGITS_USE_A
    LDA STREAM_PTRS_ARR_UNK+1,Y
    STA BCD/MODULO/DIGITS_USE_B
    LDY #$05
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    INY
    ORA [BCD/MODULO/DIGITS_USE_A],Y
    BEQ 17:1AF7
    LDA #$4D
    LDY #$00
    LDX #$40
    JMP $BD7F
RTN_Z: ; 17:1B78, 0x02FB78
    LDY R_**:$0054
    LDA STREAM_PTRS_ARR_UNK+6,Y
    ORA #$08
    STA STREAM_PTRS_ARR_UNK+6,Y
    RTS
RTN_AA: ; 17:1B83, 0x02FB83
    LDA #$4F
    LDY #$0A
    LDX #$10
    JMP $BD7F
RTN_AB: ; 17:1B8C, 0x02FB8C
    JSR $BFE6
    BCS 17:1B9A
    LDA #$17
    LDY #$0A
    LDX #$04
    JMP $BD7F
    JMP $BDD8
RTN_AC: ; 17:1B9D, 0x02FB9D
    JSR $BFE2
    BCS 17:1B9A
    JSR $BFEF
    BCS 17:1B9A
    LDA #$4E
    LDY #$00
    LDX #$20
    JMP $BD7F
RTN_AD: ; 17:1BB0, 0x02FBB0
    JSR $BFE2
    BCS 17:1B9A
    JSR $BFEF
    BCS 17:1B9A
    LDA #$19
    LDY #$00
    LDX #$40
    JSR $BD69
    BCS 17:1BCC
    LDX R_**:$0054
    LDY #$09
    JSR $BF00
    RTS
RTN_AE: ; 17:1BCD, 0x02FBCD
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    CMP #$01
    BNE 17:1BEA
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND #$02
    BNE 17:1BEA
    LDA STREAM_PTRS_ARR_UNK+6,Y
    ORA #$02
    STA STREAM_PTRS_ARR_UNK+6,Y
    LDA #$74
    JMP $A3F8
    RTS
RTN_AF: ; 17:1BEB, 0x02FBEB
    JSR $BF66
    BCS 17:1B9A
    LDA #$67
    LDY #$00
    LDX #$04
    JMP $BD69
RTN_AG: ; 17:1BF9, 0x02FBF9
    LDA #$5D
    LDY #$0A
    LDX #$02
    JMP $BD95
RTN_AH: ; 17:1C02, 0x02FC02
    LDA #$61
    LDY #$0A
    LDX #$10
    JMP $BD95
RTN_AI: ; 17:1C0B, 0x02FC0B
    LDA #$60
    LDY #$0A
    LDX #$20
    JMP $BD95
RTN_AJ: ; 17:1C14, 0x02FC14
    LDA #$70
    LDY #$0A
    LDX #$02
    JMP $BDAB
RTN_AK: ; 17:1C1D, 0x02FC1D
    LDA #$5E
    LDY #$0A
    LDX #$0C
    JMP $BD95
RTN_AL: ; 17:1C26, 0x02FC26
    LDA #$69
    LDY #$02
    LDX #$10
    JMP $BDAB
RTN_AN: ; 17:1C2F, 0x02FC2F
    LDA #$71
    LDY #$0A
    LDX #$40
    JMP $BD95
RTN_AM: ; 17:1C38, 0x02FC38
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$80
    BEQ 17:1C5A
    LDA #$00
    STA STREAM_INDEXES_ARR_UNK+1,Y
    LDA #$FF
    STA SUB/MOD_VAL_UNK_WORD[2]
    STA SUB/MOD_VAL_UNK_WORD+1
    LDX R_**:$0054
    LDY #$03
    JSR $BEF2
    LDX #$0A
    LDA #$62
    JMP $BD5B
    JMP $BDD8
RTN_AQ: ; 17:1C5D, 0x02FC5D
    LDX 56_THING_NAME_SIZE
    CPX #$06
    BEQ 17:1C85
    LDA #$19
    JSR SOUND_LIB_SET_NEW_SONG_ID
    LDA SOUND_MAIN_SONG_CURRENTLY_PLAYING_ID
    PHA
    LDX #$00
    JSR 1F:126B
    LDA #$03
    STA SOUND_EFFECT_REQUEST_ARRAY[5]
    LDX #$38
    JSR ENGINE_WAIT_X_SETTLES
    PLA
    CMP SOUND_MAIN_SONG_CURRENTLY_PLAYING_ID
    BEQ 17:1C84
    STA SOUND_MAIN_SONG_INIT_ID
    RTS
    LDA #$19
    JSR SOUND_LIB_SET_NEW_SONG_ID
    SEC
    LDA 57_INDEX_UNK
    SBC #$9E
    TAX
    JSR 1F:126B
    LDA #$03
    STA SOUND_EFFECT_REQUEST_ARRAY[5]
    JSR $B6E8
    LDA 57_INDEX_UNK
    JSR $A3F8
    LDA #$2C
    JSR SOUND_LIB_SET_NEW_SONG_ID
    LDX 57_INDEX_UNK
    INX
    CPX #$A9
    BEQ 17:1CAF
    STX 57_INDEX_UNK
    RTS
    JSR $B5FD
    LDA #$FF
    JSR SOUND_LIB_SET_NEW_SONG_ID
    LDX #$C8
    JSR ENGINE_WAIT_X_SETTLES
    LDX #$A9
    STX 57_INDEX_UNK
    TXA
    JSR $A3F8
    LDX 57_INDEX_UNK
    INX
    CPX #$AC
    BNE 17:1CBE
    LDY #$80
    JMP $B3DD
RTN_AO: ; 17:1CD0, 0x02FCD0
    LDX #$0A
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+5,Y
    ORA STREAM_INDEXES_ARR_UNK+6,Y
    BEQ 17:1D28
    SEC
    LDA STREAM_INDEXES_ARR_UNK+5,Y
    TAX
    SBC #$0A
    LDA STREAM_INDEXES_ARR_UNK+6,Y
    SBC #$00
    BCC 17:1CEC
    LDX #$0A
    STX **:$0590
    LDX #$00
    STX **:$0591
    SEC
    LDA STREAM_INDEXES_ARR_UNK+5,Y
    SBC **:$0590
    STA STREAM_INDEXES_ARR_UNK+5,Y
    LDA STREAM_INDEXES_ARR_UNK+6,Y
    SBC **:$0591
    STA STREAM_INDEXES_ARR_UNK+6,Y
    LDA #$48
    JSR $A3F8
    LDA **:$0590
    STA BCD/MODULO/DIGITS_USE_A
    LDA **:$0591
    STA BCD/MODULO/DIGITS_USE_B
    LDX SCRIPT_INDEX_53_UNK
    LDY #$05
    JSR $BEF2
    LDA SCRIPT_INDEX_53_UNK
    STA R_**:$0054
    LDX #$0A
    LDA #$3D
    JMP $BD5B
    JMP $BDD8
RTN_AP: ; 17:1D2B, 0x02FD2B
    LDY R_**:$0054
    BMI 17:1D3F
    JSR $BFAA
    BCS 17:1D3F
    JSR $B4FC
    JSR $AACC
    LDA #$81
    JMP $A3F8
    LDA #$59
    JMP $A3F8
RTN_AR: ; 17:1D44, 0x02FD44
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND #$08
    BNE 17:1D5A
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    ORA #$08
    STA STREAM_INDEXES_ARR_UNK+1,Y
    LDA #$39
    JSR $A3F8
    RTS
    PHA
    TXA
    BEQ 17:1D62
    JSR LIB_DIRECT_ENTRY_TOSOLVE
    JSR 1F:15E5
    PLA
    JMP $A3F8
    PHA
    JSR $BDCC
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND BCD/MODULO/DIGITS_USE_A
    BNE 17:1DC6
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    ORA BCD/MODULO/DIGITS_USE_A
    STA STREAM_INDEXES_ARR_UNK+1,Y
    JMP $BDBE
    PHA
    JSR $BDCC
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND BCD/MODULO/DIGITS_USE_A
    BNE 17:1DC6
    LDA STREAM_PTRS_ARR_UNK+6,Y
    ORA BCD/MODULO/DIGITS_USE_A
    STA STREAM_PTRS_ARR_UNK+6,Y
    JMP $BDBE
    PHA
    JSR $BDCC
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND BCD/MODULO/DIGITS_USE_A
    BEQ 17:1DC6
    LDA STREAM_INDEXES_ARR_UNK+1,Y
    AND BCD/MODULO/DIGITS_USE_B
    STA STREAM_INDEXES_ARR_UNK+1,Y
    JMP $BDBE
    PHA
    JSR $BDCC
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND BCD/MODULO/DIGITS_USE_A
    BEQ 17:1DC6
    LDA STREAM_PTRS_ARR_UNK+6,Y
    AND BCD/MODULO/DIGITS_USE_B
    STA STREAM_PTRS_ARR_UNK+6,Y
    LDX R_**:$0058
    PLA
    JSR $BD5B
    CLC
    RTS
    PLA
    JSR $BDD8
    SEC
    RTS
    STX BCD/MODULO/DIGITS_USE_A
    TXA
    EOR #$FF
    STA BCD/MODULO/DIGITS_USE_B
    STY R_**:$0058
    LDY R_**:$0054
    RTS
    LDA #$55
    JMP $A3F8
    LDA SUB/MOD_VAL_UNK_WORD[2]
    STA BCD/MODULO/DIGITS_USE_A
    LDA SUB/MOD_VAL_UNK_WORD+1
    STA BCD/MODULO/DIGITS_USE_B
    JMP SCRIPT_HARD_SWITCH_TO_SOMETHING_HUGE
    JSR $BF2C
    CLC
    LDA STREAM_INDEXES_ARR_UNK[24],X
    ADC BCD/MODULO/DIGITS_USE_A
    STA ALT_STUFF_COUNT?
    LDA STREAM_INDEXES_ARR_UNK+1,X
    ADC BCD/MODULO/DIGITS_USE_B
    STA ALT_COUNT_UNK
    BCC 17:1E02
    LDA #$FF
    STA ALT_STUFF_COUNT?
    STA ALT_COUNT_UNK
    SEC
    LDA SAVE_GAME_MOD_PAGE_PTR[2]
    SBC ALT_STUFF_COUNT?
    LDA SAVE_GAME_MOD_PAGE_PTR+1
    SBC ALT_COUNT_UNK
    BCS 17:1E15
    LDA SAVE_GAME_MOD_PAGE_PTR[2]
    STA ALT_STUFF_COUNT?
    LDA SAVE_GAME_MOD_PAGE_PTR+1
    STA ALT_COUNT_UNK
    SEC
    LDA ALT_STUFF_COUNT?
    SBC STREAM_INDEXES_ARR_UNK[24],X
    STA **:$0590
    LDA ALT_COUNT_UNK
    SBC STREAM_INDEXES_ARR_UNK+1,X
    STA **:$0591
    BCC 17:1E38
    ORA **:$0590
    BEQ 17:1E38
    LDA ALT_STUFF_COUNT?
    STA STREAM_INDEXES_ARR_UNK[24],X
    LDA ALT_COUNT_UNK
    STA STREAM_INDEXES_ARR_UNK+1,X
    RTS
    JMP $BFD8
    JSR $BF2C
    CLC
    LDA STREAM_INDEXES_ARR_UNK[24],X
    ADC BCD/MODULO/DIGITS_USE_A
    STA ALT_STUFF_COUNT?
    BCC 17:1E4C
    LDA #$FF
    STA ALT_STUFF_COUNT?
    SEC
    LDA SAVE_GAME_MOD_PAGE_PTR[2]
    SBC ALT_STUFF_COUNT?
    BCS 17:1E57
    LDA SAVE_GAME_MOD_PAGE_PTR[2]
    STA ALT_STUFF_COUNT?
    LDA #$00
    STA **:$0591
    SEC
    LDA ALT_STUFF_COUNT?
    SBC STREAM_INDEXES_ARR_UNK[24],X
    STA **:$0590
    BCC 17:1E6F
    BEQ 17:1E6F
    LDA ALT_STUFF_COUNT?
    STA STREAM_INDEXES_ARR_UNK[24],X
    RTS
    JMP $BFD8
    JSR $BF2C
    SEC
    LDA STREAM_INDEXES_ARR_UNK[24],X
    SBC BCD/MODULO/DIGITS_USE_A
    STA ALT_STUFF_COUNT?
    LDA STREAM_INDEXES_ARR_UNK+1,X
    SBC BCD/MODULO/DIGITS_USE_B
    STA ALT_COUNT_UNK
    BCS 17:1E8C
    LDA #$00
    STA ALT_STUFF_COUNT?
    STA ALT_COUNT_UNK
    CPY #$03
    BEQ 17:1E9E
    CPY #$05
    BEQ 17:1E9E
    LDA ALT_STUFF_COUNT?
    ORA ALT_COUNT_UNK
    BNE 17:1E9E
    LDA #$01
    STA ALT_STUFF_COUNT?
    SEC
    LDA STREAM_INDEXES_ARR_UNK[24],X
    SBC ALT_STUFF_COUNT?
    STA **:$0590
    LDA STREAM_INDEXES_ARR_UNK+1,X
    SBC ALT_COUNT_UNK
    STA **:$0591
    BCC 17:1EC1
    ORA **:$0590
    BEQ 17:1EC1
    LDA ALT_STUFF_COUNT?
    STA STREAM_INDEXES_ARR_UNK[24],X
    LDA ALT_COUNT_UNK
    STA STREAM_INDEXES_ARR_UNK+1,X
    RTS
    JMP $BFD8
    JSR $BF2C
    SEC
    LDA STREAM_INDEXES_ARR_UNK[24],X
    SBC BCD/MODULO/DIGITS_USE_A
    STA ALT_STUFF_COUNT?
    BEQ 17:1ED3
    BCS 17:1ED7
    LDA #$01
    STA ALT_STUFF_COUNT?
    LDA #$00
    STA **:$0591
    SEC
    LDA STREAM_INDEXES_ARR_UNK[24],X
    SBC ALT_STUFF_COUNT?
    STA **:$0590
    BEQ 17:1EEF
    BCC 17:1EEF
    LDA ALT_STUFF_COUNT?
    STA STREAM_INDEXES_ARR_UNK[24],X
    RTS
    JMP $BFD8
    JSR $BF2C
    LDA BCD/MODULO/DIGITS_USE_C
    STA SAVE_GAME_MOD_PAGE_PTR[2]
    LDA BCD/MODULO/DIGITS_USE_D
    STA SAVE_GAME_MOD_PAGE_PTR+1
    JMP $BDEB
    TXA
    PHA
    JSR $BF2C
    PLA
    TAX
    LDA BCD/MODULO/DIGITS_USE_C
    STA BCD/MODULO/DIGITS_USE_A
    LDA BCD/MODULO/DIGITS_USE_D
    STA BCD/MODULO/DIGITS_USE_B
    JSR SCRIPT_HARD_SWITCH_TO_SOMETHING_HUGE
    JMP $BDE8
    TXA
    PHA
    JSR $BF2C
    PLA
    TAX
    LDA BCD/MODULO/DIGITS_USE_D
    LSR A
    STA BCD/MODULO/DIGITS_USE_B
    LDA BCD/MODULO/DIGITS_USE_C
    ROR A
    STA BCD/MODULO/DIGITS_USE_A
    JSR SCRIPT_HARD_SWITCH_TO_SOMETHING_HUGE
    JMP $BE72
    LDA STREAM_PTRS_ARR_UNK[48],X
    STA ALT_STUFF_COUNT?
    LDA STREAM_PTRS_ARR_UNK+1,X
    STA ALT_COUNT_UNK
    LDA [ALT_STUFF_COUNT?],Y
    STA BCD/MODULO/DIGITS_USE_C
    ASL A
    STA SAVE_GAME_MOD_PAGE_PTR[2]
    INY
    LDA [ALT_STUFF_COUNT?],Y
    AND #$03
    STA BCD/MODULO/DIGITS_USE_D
    ROL A
    STA SAVE_GAME_MOD_PAGE_PTR+1
    BCC 17:1F4F
    LDA #$FF
    STA SAVE_GAME_MOD_PAGE_PTR[2]
    STA SAVE_GAME_MOD_PAGE_PTR+1
    DEY
    STX RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY[8]
    TYA
    CLC
    ADC RENAME_THIS_ARR_SOMETHING_SANE_EVENTUALLY[8]
    TAX
    RTS
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK+13,Y
    TAX
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+14,Y
    JMP $BF8C
    LDY SCRIPT_INDEX_53_UNK
    LDA STREAM_INDEXES_ARR_UNK+13,Y
    TAX
    LDY R_**:$0054
    LDA STREAM_INDEXES_ARR_UNK+15,Y
    JMP $BF8C
    LDA STREAM_INDEXES_ARR_UNK+2,Y
    AND **:$0057
    BEQ 17:1F87
    LSR BCD/MODULO/DIGITS_USE_B
    ROR BCD/MODULO/DIGITS_USE_A
    LDA BCD/MODULO/DIGITS_USE_A
    ORA BCD/MODULO/DIGITS_USE_B
    BNE 17:1F87
    INC BCD/MODULO/DIGITS_USE_A
    LDA #$00
    STA **:$0057
    RTS
    LSR A
    STA BCD/MODULO/DIGITS_USE_A
    STX SAVE_GAME_MOD_PAGE_PTR[2]
    TXA
    SEC
    SBC BCD/MODULO/DIGITS_USE_A
    BCS 17:1F99
    LDA #$00
    STA BCD/MODULO/DIGITS_USE_B
    LDA #$00
    STA BCD/MODULO/DIGITS_USE_A
    STA BCD/MODULO/DIGITS_USE_C
    JSR ENGINE_BINARY_MODULO_HELPER
    JSR RANDOMIZE_GROUP_0x26
    CMP BCD/MODULO/DIGITS_USE_A
    RTS
    JSR $AABC
    LDY #$00
    TYA
    PHA
    LDA [BCD/MODULO/DIGITS_USE_A],Y
    BEQ 17:1FCB
    JSR $AAA4
    JSR ENGINE_SET_MAPPER_R6_TO_0x00
    LDY #$05
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    TAX
    LDY #$02
    LDA [BCD/MODULO/DIGITS_USE_C],Y
    JSR ENGINE_SET_MAPPER_R6_TO_0x16
    AND #$40
    BNE 17:1FD4
    PLA
    TAY
    INY
    CPY #$08
    BNE 17:1FAF
    SEC
    RTS
    PLA
    TAY
    CLC
    RTS
    LDA #$00
    STA **:$0590
    STA **:$0591
    CLC
    RTS
    LDA R_**:$0054
    BPL 17:1FEB
    LDA 56_THING_NAME_SIZE
    LSR A
    BNE 17:1FED
    CLC
    RTS
    SEC
    RTS
    LDY R_**:$0054
    BMI 17:1FFC
    LDA STREAM_INDEXES_ARR_UNK+17,Y
    CMP #$06
    BNE 17:1FFC
    SEC
    RTS
    CLC
    RTS
    .db FF ; 2 Bytes total unused. Wowza.
    .db FF
